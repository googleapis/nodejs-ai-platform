{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "aiplatform": {
              "nested": {
                "v1": {
                  "options": {
                    "go_package": "google.golang.org/genproto/googleapis/cloud/aiplatform/v1;aiplatform",
                    "java_multiple_files": true,
                    "java_outer_classname": "SpecialistPoolServiceProto",
                    "java_package": "com.google.cloud.aiplatform.v1",
                    "(google.api.resource_definition).type": "datalabeling.googleapis.com/AnnotatedDataset",
                    "(google.api.resource_definition).pattern": "projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}"
                  },
                  "nested": {
                    "AcceleratorType": {
                      "values": {
                        "ACCELERATOR_TYPE_UNSPECIFIED": 0,
                        "NVIDIA_TESLA_K80": 1,
                        "NVIDIA_TESLA_P100": 2,
                        "NVIDIA_TESLA_V100": 3,
                        "NVIDIA_TESLA_P4": 4,
                        "NVIDIA_TESLA_T4": 5,
                        "TPU_V2": 6,
                        "TPU_V3": 7
                      }
                    },
                    "Annotation": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Annotation",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}/annotations/{annotation}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "payloadSchemaUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "payload": {
                          "type": "google.protobuf.Value",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "annotationSource": {
                          "type": "UserActionReference",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UserActionReference": {
                      "oneofs": {
                        "reference": {
                          "oneof": [
                            "operation",
                            "dataLabelingJob"
                          ]
                        }
                      },
                      "fields": {
                        "operation": {
                          "type": "string",
                          "id": 1
                        },
                        "dataLabelingJob": {
                          "type": "string",
                          "id": 2
                        },
                        "method": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "AnnotationSpec": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/AnnotationSpec",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "BatchPredictionJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/BatchPredictionJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "inputConfig": {
                          "type": "InputConfig",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "modelParameters": {
                          "type": "google.protobuf.Value",
                          "id": 5
                        },
                        "outputConfig": {
                          "type": "OutputConfig",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "dedicatedResources": {
                          "type": "BatchDedicatedResources",
                          "id": 7
                        },
                        "manualBatchTuningParameters": {
                          "type": "ManualBatchTuningParameters",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "outputInfo": {
                          "type": "OutputInfo",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "partialFailures": {
                          "rule": "repeated",
                          "type": "google.rpc.Status",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "resourcesConsumed": {
                          "type": "ResourcesConsumed",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "completionStats": {
                          "type": "CompletionStats",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 19
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 24
                        }
                      },
                      "nested": {
                        "InputConfig": {
                          "oneofs": {
                            "source": {
                              "oneof": [
                                "gcsSource",
                                "bigquerySource"
                              ]
                            }
                          },
                          "fields": {
                            "gcsSource": {
                              "type": "GcsSource",
                              "id": 2
                            },
                            "bigquerySource": {
                              "type": "BigQuerySource",
                              "id": 3
                            },
                            "instancesFormat": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "OutputConfig": {
                          "oneofs": {
                            "destination": {
                              "oneof": [
                                "gcsDestination",
                                "bigqueryDestination"
                              ]
                            }
                          },
                          "fields": {
                            "gcsDestination": {
                              "type": "GcsDestination",
                              "id": 2
                            },
                            "bigqueryDestination": {
                              "type": "BigQueryDestination",
                              "id": 3
                            },
                            "predictionsFormat": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "OutputInfo": {
                          "oneofs": {
                            "outputLocation": {
                              "oneof": [
                                "gcsOutputDirectory",
                                "bigqueryOutputDataset"
                              ]
                            }
                          },
                          "fields": {
                            "gcsOutputDirectory": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "bigqueryOutputDataset": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "CompletionStats": {
                      "fields": {
                        "successfulCount": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "failedCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "incompleteCount": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "EncryptionSpec": {
                      "fields": {
                        "kmsKeyName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GcsSource": {
                      "fields": {
                        "uris": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GcsDestination": {
                      "fields": {
                        "outputUriPrefix": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BigQuerySource": {
                      "fields": {
                        "inputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BigQueryDestination": {
                      "fields": {
                        "outputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ContainerRegistryDestination": {
                      "fields": {
                        "outputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "JobState": {
                      "values": {
                        "JOB_STATE_UNSPECIFIED": 0,
                        "JOB_STATE_QUEUED": 1,
                        "JOB_STATE_PENDING": 2,
                        "JOB_STATE_RUNNING": 3,
                        "JOB_STATE_SUCCEEDED": 4,
                        "JOB_STATE_FAILED": 5,
                        "JOB_STATE_CANCELLING": 6,
                        "JOB_STATE_CANCELLED": 7,
                        "JOB_STATE_PAUSED": 8
                      }
                    },
                    "MachineSpec": {
                      "fields": {
                        "machineType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "acceleratorType": {
                          "type": "AcceleratorType",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "acceleratorCount": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "DedicatedResources": {
                      "fields": {
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "minReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "AutomaticResources": {
                      "fields": {
                        "minReplicaCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "BatchDedicatedResources": {
                      "fields": {
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "startingReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "ResourcesConsumed": {
                      "fields": {
                        "replicaHours": {
                          "type": "double",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DiskSpec": {
                      "fields": {
                        "bootDiskType": {
                          "type": "string",
                          "id": 1
                        },
                        "bootDiskSizeGb": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "ManualBatchTuningParameters": {
                      "fields": {
                        "batchSize": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "CustomJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/CustomJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/customJobs/{custom_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "jobSpec": {
                          "type": "CustomJobSpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 12
                        }
                      }
                    },
                    "CustomJobSpec": {
                      "fields": {
                        "workerPoolSpecs": {
                          "rule": "repeated",
                          "type": "WorkerPoolSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "scheduling": {
                          "type": "Scheduling",
                          "id": 3
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 4
                        },
                        "network": {
                          "type": "string",
                          "id": 5
                        },
                        "baseOutputDirectory": {
                          "type": "GcsDestination",
                          "id": 6
                        }
                      }
                    },
                    "WorkerPoolSpec": {
                      "oneofs": {
                        "task": {
                          "oneof": [
                            "containerSpec",
                            "pythonPackageSpec"
                          ]
                        }
                      },
                      "fields": {
                        "containerSpec": {
                          "type": "ContainerSpec",
                          "id": 6
                        },
                        "pythonPackageSpec": {
                          "type": "PythonPackageSpec",
                          "id": 7
                        },
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "replicaCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "diskSpec": {
                          "type": "DiskSpec",
                          "id": 5
                        }
                      }
                    },
                    "ContainerSpec": {
                      "fields": {
                        "imageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "command": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "EnvVar",
                          "id": 4
                        }
                      }
                    },
                    "PythonPackageSpec": {
                      "fields": {
                        "executorImageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "packageUris": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pythonModule": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "EnvVar",
                          "id": 5
                        }
                      }
                    },
                    "Scheduling": {
                      "fields": {
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 1
                        },
                        "restartJobOnWorkerRestart": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "EnvVar": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "value": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DataItem": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DataItem",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "payload": {
                          "type": "google.protobuf.Value",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DataLabelingJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DataLabelingJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "datasets": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "annotationLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 12
                        },
                        "labelerCount": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "instructionUri": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputsSchemaUri": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputs": {
                          "type": "google.protobuf.Value",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labelingProgress": {
                          "type": "int32",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "currentSpend": {
                          "type": "google.type.Money",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "specialistPools": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 16
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 20
                        },
                        "activeLearningConfig": {
                          "type": "ActiveLearningConfig",
                          "id": 21
                        }
                      }
                    },
                    "ActiveLearningConfig": {
                      "oneofs": {
                        "humanLabelingBudget": {
                          "oneof": [
                            "maxDataItemCount",
                            "maxDataItemPercentage"
                          ]
                        }
                      },
                      "fields": {
                        "maxDataItemCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "maxDataItemPercentage": {
                          "type": "int32",
                          "id": 2
                        },
                        "sampleConfig": {
                          "type": "SampleConfig",
                          "id": 3
                        },
                        "trainingConfig": {
                          "type": "TrainingConfig",
                          "id": 4
                        }
                      }
                    },
                    "SampleConfig": {
                      "oneofs": {
                        "initialBatchSampleSize": {
                          "oneof": [
                            "initialBatchSamplePercentage"
                          ]
                        },
                        "followingBatchSampleSize": {
                          "oneof": [
                            "followingBatchSamplePercentage"
                          ]
                        }
                      },
                      "fields": {
                        "initialBatchSamplePercentage": {
                          "type": "int32",
                          "id": 1
                        },
                        "followingBatchSamplePercentage": {
                          "type": "int32",
                          "id": 3
                        },
                        "sampleStrategy": {
                          "type": "SampleStrategy",
                          "id": 5
                        }
                      },
                      "nested": {
                        "SampleStrategy": {
                          "values": {
                            "SAMPLE_STRATEGY_UNSPECIFIED": 0,
                            "UNCERTAINTY": 1
                          }
                        }
                      }
                    },
                    "TrainingConfig": {
                      "fields": {
                        "timeoutTrainingMilliHours": {
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "SpecialistPool": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/SpecialistPool",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/specialistPools/{specialist_pool}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "specialistManagersCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "specialistManagerEmails": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "pendingDataLabelingJobs": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Dataset": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Dataset",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 6
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 7
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 11
                        }
                      }
                    },
                    "ImportDataConfig": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "gcsSource"
                          ]
                        }
                      },
                      "fields": {
                        "gcsSource": {
                          "type": "GcsSource",
                          "id": 1
                        },
                        "dataItemLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "importSchemaUri": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExportDataConfig": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "gcsDestination"
                          ]
                        }
                      },
                      "fields": {
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 1
                        },
                        "annotationsFilter": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DatasetService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateDataset": {
                          "requestType": "CreateDatasetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/datasets",
                            "(google.api.http).body": "dataset",
                            "(google.api.method_signature)": "parent,dataset",
                            "(google.longrunning.operation_info).response_type": "Dataset",
                            "(google.longrunning.operation_info).metadata_type": "CreateDatasetOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/datasets",
                                "body": "dataset"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,dataset"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Dataset",
                                "metadata_type": "CreateDatasetOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetDataset": {
                          "requestType": "GetDatasetRequest",
                          "responseType": "Dataset",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/datasets/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/datasets/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateDataset": {
                          "requestType": "UpdateDatasetRequest",
                          "responseType": "Dataset",
                          "options": {
                            "(google.api.http).patch": "/v1/{dataset.name=projects/*/locations/*/datasets/*}",
                            "(google.api.http).body": "dataset",
                            "(google.api.method_signature)": "dataset,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{dataset.name=projects/*/locations/*/datasets/*}",
                                "body": "dataset"
                              }
                            },
                            {
                              "(google.api.method_signature)": "dataset,update_mask"
                            }
                          ]
                        },
                        "ListDatasets": {
                          "requestType": "ListDatasetsRequest",
                          "responseType": "ListDatasetsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/datasets",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/datasets"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteDataset": {
                          "requestType": "DeleteDatasetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/datasets/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/datasets/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ImportData": {
                          "requestType": "ImportDataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/datasets/*}:import",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,import_configs",
                            "(google.longrunning.operation_info).response_type": "ImportDataResponse",
                            "(google.longrunning.operation_info).metadata_type": "ImportDataOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/datasets/*}:import",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,import_configs"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ImportDataResponse",
                                "metadata_type": "ImportDataOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ExportData": {
                          "requestType": "ExportDataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/datasets/*}:export",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,export_config",
                            "(google.longrunning.operation_info).response_type": "ExportDataResponse",
                            "(google.longrunning.operation_info).metadata_type": "ExportDataOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/datasets/*}:export",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,export_config"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ExportDataResponse",
                                "metadata_type": "ExportDataOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListDataItems": {
                          "requestType": "ListDataItemsRequest",
                          "responseType": "ListDataItemsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/datasets/*}/dataItems",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/datasets/*}/dataItems"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetAnnotationSpec": {
                          "requestType": "GetAnnotationSpecRequest",
                          "responseType": "AnnotationSpec",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListAnnotations": {
                          "requestType": "ListAnnotationsRequest",
                          "responseType": "ListAnnotationsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/datasets/*/dataItems/*}/annotations",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/datasets/*/dataItems/*}/annotations"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateDatasetRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "dataset": {
                          "type": "Dataset",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateDatasetOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetDatasetRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "UpdateDatasetRequest": {
                      "fields": {
                        "dataset": {
                          "type": "Dataset",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListDatasetsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDatasetsResponse": {
                      "fields": {
                        "datasets": {
                          "rule": "repeated",
                          "type": "Dataset",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteDatasetRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        }
                      }
                    },
                    "ImportDataRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "importConfigs": {
                          "rule": "repeated",
                          "type": "ImportDataConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ImportDataResponse": {
                      "fields": {}
                    },
                    "ImportDataOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "ExportDataRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "exportConfig": {
                          "type": "ExportDataConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExportDataResponse": {
                      "fields": {
                        "exportedFiles": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "ExportDataOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "gcsOutputDirectory": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListDataItemsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDataItemsResponse": {
                      "fields": {
                        "dataItems": {
                          "rule": "repeated",
                          "type": "DataItem",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetAnnotationSpecRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/AnnotationSpec"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "ListAnnotationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataItem"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListAnnotationsResponse": {
                      "fields": {
                        "annotations": {
                          "rule": "repeated",
                          "type": "Annotation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GenericOperationMetadata": {
                      "fields": {
                        "partialFailures": {
                          "rule": "repeated",
                          "type": "google.rpc.Status",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DeleteOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "TrainingPipeline": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/TrainingPipeline",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputDataConfig": {
                          "type": "InputDataConfig",
                          "id": 3
                        },
                        "trainingTaskDefinition": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trainingTaskInputs": {
                          "type": "google.protobuf.Value",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trainingTaskMetadata": {
                          "type": "google.protobuf.Value",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "modelToUpload": {
                          "type": "Model",
                          "id": 7
                        },
                        "state": {
                          "type": "PipelineState",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 15
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 18
                        }
                      }
                    },
                    "InputDataConfig": {
                      "oneofs": {
                        "split": {
                          "oneof": [
                            "fractionSplit",
                            "filterSplit",
                            "predefinedSplit",
                            "timestampSplit"
                          ]
                        },
                        "destination": {
                          "oneof": [
                            "gcsDestination",
                            "bigqueryDestination"
                          ]
                        }
                      },
                      "fields": {
                        "fractionSplit": {
                          "type": "FractionSplit",
                          "id": 2
                        },
                        "filterSplit": {
                          "type": "FilterSplit",
                          "id": 3
                        },
                        "predefinedSplit": {
                          "type": "PredefinedSplit",
                          "id": 4
                        },
                        "timestampSplit": {
                          "type": "TimestampSplit",
                          "id": 5
                        },
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 8
                        },
                        "bigqueryDestination": {
                          "type": "BigQueryDestination",
                          "id": 10
                        },
                        "datasetId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "annotationsFilter": {
                          "type": "string",
                          "id": 6
                        },
                        "annotationSchemaUri": {
                          "type": "string",
                          "id": 9
                        }
                      }
                    },
                    "FractionSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        }
                      }
                    },
                    "FilterSplit": {
                      "fields": {
                        "trainingFilter": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validationFilter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "testFilter": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "PredefinedSplit": {
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TimestampSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        },
                        "key": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Model": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Model",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "predictSchemata": {
                          "type": "PredictSchemata",
                          "id": 4
                        },
                        "metadataSchemaUri": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "supportedExportFormats": {
                          "rule": "repeated",
                          "type": "ExportFormat",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "trainingPipeline": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        },
                        "containerSpec": {
                          "type": "ModelContainerSpec",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "artifactUri": {
                          "type": "string",
                          "id": 26,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "supportedDeploymentResourcesTypes": {
                          "rule": "repeated",
                          "type": "DeploymentResourcesType",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "supportedInputStorageFormats": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "supportedOutputStorageFormats": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "deployedModels": {
                          "rule": "repeated",
                          "type": "DeployedModelRef",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 16
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 17
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 24
                        }
                      },
                      "nested": {
                        "ExportFormat": {
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "exportableContents": {
                              "rule": "repeated",
                              "type": "ExportableContent",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "ExportableContent": {
                              "values": {
                                "EXPORTABLE_CONTENT_UNSPECIFIED": 0,
                                "ARTIFACT": 1,
                                "IMAGE": 2
                              }
                            }
                          }
                        },
                        "DeploymentResourcesType": {
                          "values": {
                            "DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED": 0,
                            "DEDICATED_RESOURCES": 1,
                            "AUTOMATIC_RESOURCES": 2
                          }
                        }
                      }
                    },
                    "PredictSchemata": {
                      "fields": {
                        "instanceSchemaUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "parametersSchemaUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "predictionSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "ModelContainerSpec": {
                      "fields": {
                        "imageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "command": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "EnvVar",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "ports": {
                          "rule": "repeated",
                          "type": "Port",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "predictRoute": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "healthRoute": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "Port": {
                      "fields": {
                        "containerPort": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "DeployedModelRef": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "PipelineState": {
                      "values": {
                        "PIPELINE_STATE_UNSPECIFIED": 0,
                        "PIPELINE_STATE_QUEUED": 1,
                        "PIPELINE_STATE_PENDING": 2,
                        "PIPELINE_STATE_RUNNING": 3,
                        "PIPELINE_STATE_SUCCEEDED": 4,
                        "PIPELINE_STATE_FAILED": 5,
                        "PIPELINE_STATE_CANCELLING": 6,
                        "PIPELINE_STATE_CANCELLED": 7,
                        "PIPELINE_STATE_PAUSED": 8
                      }
                    },
                    "Endpoint": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Endpoint",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/endpoints/{endpoint}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "deployedModels": {
                          "rule": "repeated",
                          "type": "DeployedModel",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 5
                        },
                        "etag": {
                          "type": "string",
                          "id": 6
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 7
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 10
                        }
                      }
                    },
                    "DeployedModel": {
                      "oneofs": {
                        "predictionResources": {
                          "oneof": [
                            "dedicatedResources",
                            "automaticResources"
                          ]
                        }
                      },
                      "fields": {
                        "dedicatedResources": {
                          "type": "DedicatedResources",
                          "id": 7
                        },
                        "automaticResources": {
                          "type": "AutomaticResources",
                          "id": 8
                        },
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 11
                        },
                        "disableContainerLogging": {
                          "type": "bool",
                          "id": 15
                        },
                        "enableAccessLogging": {
                          "type": "bool",
                          "id": 13
                        }
                      }
                    },
                    "EndpointService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateEndpoint": {
                          "requestType": "CreateEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/endpoints",
                            "(google.api.http).body": "endpoint",
                            "(google.api.method_signature)": "parent,endpoint",
                            "(google.longrunning.operation_info).response_type": "Endpoint",
                            "(google.longrunning.operation_info).metadata_type": "CreateEndpointOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/endpoints",
                                "body": "endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,endpoint"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Endpoint",
                                "metadata_type": "CreateEndpointOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetEndpoint": {
                          "requestType": "GetEndpointRequest",
                          "responseType": "Endpoint",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/endpoints/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/endpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListEndpoints": {
                          "requestType": "ListEndpointsRequest",
                          "responseType": "ListEndpointsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/endpoints",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/endpoints"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateEndpoint": {
                          "requestType": "UpdateEndpointRequest",
                          "responseType": "Endpoint",
                          "options": {
                            "(google.api.http).patch": "/v1/{endpoint.name=projects/*/locations/*/endpoints/*}",
                            "(google.api.http).body": "endpoint",
                            "(google.api.method_signature)": "endpoint,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{endpoint.name=projects/*/locations/*/endpoints/*}",
                                "body": "endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,update_mask"
                            }
                          ]
                        },
                        "DeleteEndpoint": {
                          "requestType": "DeleteEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/endpoints/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/endpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeployModel": {
                          "requestType": "DeployModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:deployModel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,deployed_model,traffic_split",
                            "(google.longrunning.operation_info).response_type": "DeployModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "DeployModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:deployModel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,deployed_model,traffic_split"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DeployModelResponse",
                                "metadata_type": "DeployModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UndeployModel": {
                          "requestType": "UndeployModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:undeployModel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,deployed_model_id,traffic_split",
                            "(google.longrunning.operation_info).response_type": "UndeployModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "UndeployModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:undeployModel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,deployed_model_id,traffic_split"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UndeployModelResponse",
                                "metadata_type": "UndeployModelOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateEndpointRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "endpoint": {
                          "type": "Endpoint",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateEndpointOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        }
                      }
                    },
                    "ListEndpointsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListEndpointsResponse": {
                      "fields": {
                        "endpoints": {
                          "rule": "repeated",
                          "type": "Endpoint",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateEndpointRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "Endpoint",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        }
                      }
                    },
                    "DeployModelRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "DeployModelResponse": {
                      "fields": {
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 1
                        }
                      }
                    },
                    "DeployModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UndeployModelRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "UndeployModelResponse": {
                      "fields": {}
                    },
                    "UndeployModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "HyperparameterTuningJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/HyperparameterTuningJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "studySpec": {
                          "type": "StudySpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "maxTrialCount": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parallelTrialCount": {
                          "type": "int32",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "maxFailedTrialCount": {
                          "type": "int32",
                          "id": 7
                        },
                        "trialJobSpec": {
                          "type": "CustomJobSpec",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 16
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 17
                        }
                      }
                    },
                    "Trial": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Trial",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/studies/{study}/trials/{trial}"
                      },
                      "fields": {
                        "id": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "parameters": {
                          "rule": "repeated",
                          "type": "Parameter",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finalMeasurement": {
                          "type": "Measurement",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "customJob": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      },
                      "nested": {
                        "Parameter": {
                          "fields": {
                            "parameterId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "google.protobuf.Value",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "REQUESTED": 1,
                            "ACTIVE": 2,
                            "STOPPING": 3,
                            "SUCCEEDED": 4,
                            "INFEASIBLE": 5
                          }
                        }
                      }
                    },
                    "StudySpec": {
                      "fields": {
                        "metrics": {
                          "rule": "repeated",
                          "type": "MetricSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parameters": {
                          "rule": "repeated",
                          "type": "ParameterSpec",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "algorithm": {
                          "type": "Algorithm",
                          "id": 3
                        },
                        "observationNoise": {
                          "type": "ObservationNoise",
                          "id": 6
                        },
                        "measurementSelectionType": {
                          "type": "MeasurementSelectionType",
                          "id": 7
                        }
                      },
                      "nested": {
                        "MetricSpec": {
                          "fields": {
                            "metricId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "goal": {
                              "type": "GoalType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "GoalType": {
                              "values": {
                                "GOAL_TYPE_UNSPECIFIED": 0,
                                "MAXIMIZE": 1,
                                "MINIMIZE": 2
                              }
                            }
                          }
                        },
                        "ParameterSpec": {
                          "oneofs": {
                            "parameterValueSpec": {
                              "oneof": [
                                "doubleValueSpec",
                                "integerValueSpec",
                                "categoricalValueSpec",
                                "discreteValueSpec"
                              ]
                            }
                          },
                          "fields": {
                            "doubleValueSpec": {
                              "type": "DoubleValueSpec",
                              "id": 2
                            },
                            "integerValueSpec": {
                              "type": "IntegerValueSpec",
                              "id": 3
                            },
                            "categoricalValueSpec": {
                              "type": "CategoricalValueSpec",
                              "id": 4
                            },
                            "discreteValueSpec": {
                              "type": "DiscreteValueSpec",
                              "id": 5
                            },
                            "parameterId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "scaleType": {
                              "type": "ScaleType",
                              "id": 6
                            },
                            "conditionalParameterSpecs": {
                              "rule": "repeated",
                              "type": "ConditionalParameterSpec",
                              "id": 10
                            }
                          },
                          "nested": {
                            "DoubleValueSpec": {
                              "fields": {
                                "minValue": {
                                  "type": "double",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxValue": {
                                  "type": "double",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "IntegerValueSpec": {
                              "fields": {
                                "minValue": {
                                  "type": "int64",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxValue": {
                                  "type": "int64",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "CategoricalValueSpec": {
                              "fields": {
                                "values": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "DiscreteValueSpec": {
                              "fields": {
                                "values": {
                                  "rule": "repeated",
                                  "type": "double",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "ConditionalParameterSpec": {
                              "oneofs": {
                                "parentValueCondition": {
                                  "oneof": [
                                    "parentDiscreteValues",
                                    "parentIntValues",
                                    "parentCategoricalValues"
                                  ]
                                }
                              },
                              "fields": {
                                "parentDiscreteValues": {
                                  "type": "DiscreteValueCondition",
                                  "id": 2
                                },
                                "parentIntValues": {
                                  "type": "IntValueCondition",
                                  "id": 3
                                },
                                "parentCategoricalValues": {
                                  "type": "CategoricalValueCondition",
                                  "id": 4
                                },
                                "parameterSpec": {
                                  "type": "ParameterSpec",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              },
                              "nested": {
                                "DiscreteValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "double",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                },
                                "IntValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                },
                                "CategoricalValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "ScaleType": {
                              "values": {
                                "SCALE_TYPE_UNSPECIFIED": 0,
                                "UNIT_LINEAR_SCALE": 1,
                                "UNIT_LOG_SCALE": 2,
                                "UNIT_REVERSE_LOG_SCALE": 3
                              }
                            }
                          }
                        },
                        "Algorithm": {
                          "values": {
                            "ALGORITHM_UNSPECIFIED": 0,
                            "GRID_SEARCH": 2,
                            "RANDOM_SEARCH": 3
                          }
                        },
                        "ObservationNoise": {
                          "values": {
                            "OBSERVATION_NOISE_UNSPECIFIED": 0,
                            "LOW": 1,
                            "HIGH": 2
                          }
                        },
                        "MeasurementSelectionType": {
                          "values": {
                            "MEASUREMENT_SELECTION_TYPE_UNSPECIFIED": 0,
                            "LAST_MEASUREMENT": 1,
                            "BEST_MEASUREMENT": 2
                          }
                        }
                      }
                    },
                    "Measurement": {
                      "fields": {
                        "stepCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "Metric",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Metric": {
                          "fields": {
                            "metricId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "double",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "JobService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateCustomJob": {
                          "requestType": "CreateCustomJobRequest",
                          "responseType": "CustomJob",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/customJobs",
                            "(google.api.http).body": "custom_job",
                            "(google.api.method_signature)": "parent,custom_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/customJobs",
                                "body": "custom_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,custom_job"
                            }
                          ]
                        },
                        "GetCustomJob": {
                          "requestType": "GetCustomJobRequest",
                          "responseType": "CustomJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/customJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/customJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListCustomJobs": {
                          "requestType": "ListCustomJobsRequest",
                          "responseType": "ListCustomJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/customJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/customJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteCustomJob": {
                          "requestType": "DeleteCustomJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/customJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/customJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelCustomJob": {
                          "requestType": "CancelCustomJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/customJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/customJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateDataLabelingJob": {
                          "requestType": "CreateDataLabelingJobRequest",
                          "responseType": "DataLabelingJob",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/dataLabelingJobs",
                            "(google.api.http).body": "data_labeling_job",
                            "(google.api.method_signature)": "parent,data_labeling_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/dataLabelingJobs",
                                "body": "data_labeling_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,data_labeling_job"
                            }
                          ]
                        },
                        "GetDataLabelingJob": {
                          "requestType": "GetDataLabelingJobRequest",
                          "responseType": "DataLabelingJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListDataLabelingJobs": {
                          "requestType": "ListDataLabelingJobsRequest",
                          "responseType": "ListDataLabelingJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/dataLabelingJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/dataLabelingJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteDataLabelingJob": {
                          "requestType": "DeleteDataLabelingJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelDataLabelingJob": {
                          "requestType": "CancelDataLabelingJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/dataLabelingJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateHyperparameterTuningJob": {
                          "requestType": "CreateHyperparameterTuningJobRequest",
                          "responseType": "HyperparameterTuningJob",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                            "(google.api.http).body": "hyperparameter_tuning_job",
                            "(google.api.method_signature)": "parent,hyperparameter_tuning_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                                "body": "hyperparameter_tuning_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,hyperparameter_tuning_job"
                            }
                          ]
                        },
                        "GetHyperparameterTuningJob": {
                          "requestType": "GetHyperparameterTuningJobRequest",
                          "responseType": "HyperparameterTuningJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListHyperparameterTuningJobs": {
                          "requestType": "ListHyperparameterTuningJobsRequest",
                          "responseType": "ListHyperparameterTuningJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/hyperparameterTuningJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteHyperparameterTuningJob": {
                          "requestType": "DeleteHyperparameterTuningJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelHyperparameterTuningJob": {
                          "requestType": "CancelHyperparameterTuningJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateBatchPredictionJob": {
                          "requestType": "CreateBatchPredictionJobRequest",
                          "responseType": "BatchPredictionJob",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/batchPredictionJobs",
                            "(google.api.http).body": "batch_prediction_job",
                            "(google.api.method_signature)": "parent,batch_prediction_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/batchPredictionJobs",
                                "body": "batch_prediction_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,batch_prediction_job"
                            }
                          ]
                        },
                        "GetBatchPredictionJob": {
                          "requestType": "GetBatchPredictionJobRequest",
                          "responseType": "BatchPredictionJob",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListBatchPredictionJobs": {
                          "requestType": "ListBatchPredictionJobsRequest",
                          "responseType": "ListBatchPredictionJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/batchPredictionJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/batchPredictionJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteBatchPredictionJob": {
                          "requestType": "DeleteBatchPredictionJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelBatchPredictionJob": {
                          "requestType": "CancelBatchPredictionJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/batchPredictionJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        }
                      }
                    },
                    "CreateCustomJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "customJob": {
                          "type": "CustomJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "ListCustomJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListCustomJobsResponse": {
                      "fields": {
                        "customJobs": {
                          "rule": "repeated",
                          "type": "CustomJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "CancelCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "CreateDataLabelingJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "dataLabelingJob": {
                          "type": "DataLabelingJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "ListDataLabelingJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDataLabelingJobsResponse": {
                      "fields": {
                        "dataLabelingJobs": {
                          "rule": "repeated",
                          "type": "DataLabelingJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "CancelDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "CreateHyperparameterTuningJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "hyperparameterTuningJob": {
                          "type": "HyperparameterTuningJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "ListHyperparameterTuningJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListHyperparameterTuningJobsResponse": {
                      "fields": {
                        "hyperparameterTuningJobs": {
                          "rule": "repeated",
                          "type": "HyperparameterTuningJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "CancelHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "CreateBatchPredictionJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "batchPredictionJob": {
                          "type": "BatchPredictionJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "ListBatchPredictionJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListBatchPredictionJobsResponse": {
                      "fields": {
                        "batchPredictionJobs": {
                          "rule": "repeated",
                          "type": "BatchPredictionJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "CancelBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "MigratableResource": {
                      "oneofs": {
                        "resource": {
                          "oneof": [
                            "mlEngineModelVersion",
                            "automlModel",
                            "automlDataset",
                            "dataLabelingDataset"
                          ]
                        }
                      },
                      "fields": {
                        "mlEngineModelVersion": {
                          "type": "MlEngineModelVersion",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "automlModel": {
                          "type": "AutomlModel",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "automlDataset": {
                          "type": "AutomlDataset",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataLabelingDataset": {
                          "type": "DataLabelingDataset",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastMigrateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastUpdateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "MlEngineModelVersion": {
                          "fields": {
                            "endpoint": {
                              "type": "string",
                              "id": 1
                            },
                            "version": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "ml.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "AutomlModel": {
                          "fields": {
                            "model": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "automl.googleapis.com/Model"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "AutomlDataset": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "automl.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "DataLabelingDataset": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "datalabeling.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 4
                            },
                            "dataLabelingAnnotatedDatasets": {
                              "rule": "repeated",
                              "type": "DataLabelingAnnotatedDataset",
                              "id": 3
                            }
                          },
                          "nested": {
                            "DataLabelingAnnotatedDataset": {
                              "fields": {
                                "annotatedDataset": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "datalabeling.googleapis.com/AnnotatedDataset"
                                  }
                                },
                                "annotatedDatasetDisplayName": {
                                  "type": "string",
                                  "id": 3
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "MigrationService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "SearchMigratableResources": {
                          "requestType": "SearchMigratableResourcesRequest",
                          "responseType": "SearchMigratableResourcesResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/migratableResources:search",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/migratableResources:search",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "BatchMigrateResources": {
                          "requestType": "BatchMigrateResourcesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/migratableResources:batchMigrate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,migrate_resource_requests",
                            "(google.longrunning.operation_info).response_type": "BatchMigrateResourcesResponse",
                            "(google.longrunning.operation_info).metadata_type": "BatchMigrateResourcesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/migratableResources:batchMigrate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,migrate_resource_requests"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "BatchMigrateResourcesResponse",
                                "metadata_type": "BatchMigrateResourcesOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "SearchMigratableResourcesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "SearchMigratableResourcesResponse": {
                      "fields": {
                        "migratableResources": {
                          "rule": "repeated",
                          "type": "MigratableResource",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "BatchMigrateResourcesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "migrateResourceRequests": {
                          "rule": "repeated",
                          "type": "MigrateResourceRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "MigrateResourceRequest": {
                      "oneofs": {
                        "request": {
                          "oneof": [
                            "migrateMlEngineModelVersionConfig",
                            "migrateAutomlModelConfig",
                            "migrateAutomlDatasetConfig",
                            "migrateDataLabelingDatasetConfig"
                          ]
                        }
                      },
                      "fields": {
                        "migrateMlEngineModelVersionConfig": {
                          "type": "MigrateMlEngineModelVersionConfig",
                          "id": 1
                        },
                        "migrateAutomlModelConfig": {
                          "type": "MigrateAutomlModelConfig",
                          "id": 2
                        },
                        "migrateAutomlDatasetConfig": {
                          "type": "MigrateAutomlDatasetConfig",
                          "id": 3
                        },
                        "migrateDataLabelingDatasetConfig": {
                          "type": "MigrateDataLabelingDatasetConfig",
                          "id": 4
                        }
                      },
                      "nested": {
                        "MigrateMlEngineModelVersionConfig": {
                          "fields": {
                            "endpoint": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "modelVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "ml.googleapis.com/Version"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "MigrateAutomlModelConfig": {
                          "fields": {
                            "model": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "automl.googleapis.com/Model"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "MigrateAutomlDatasetConfig": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "automl.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "MigrateDataLabelingDatasetConfig": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "datalabeling.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "migrateDataLabelingAnnotatedDatasetConfigs": {
                              "rule": "repeated",
                              "type": "MigrateDataLabelingAnnotatedDatasetConfig",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "MigrateDataLabelingAnnotatedDatasetConfig": {
                              "fields": {
                                "annotatedDataset": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "datalabeling.googleapis.com/AnnotatedDataset"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "BatchMigrateResourcesResponse": {
                      "fields": {
                        "migrateResourceResponses": {
                          "rule": "repeated",
                          "type": "MigrateResourceResponse",
                          "id": 1
                        }
                      }
                    },
                    "MigrateResourceResponse": {
                      "oneofs": {
                        "migratedResource": {
                          "oneof": [
                            "dataset",
                            "model"
                          ]
                        }
                      },
                      "fields": {
                        "dataset": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "migratableResource": {
                          "type": "MigratableResource",
                          "id": 3
                        }
                      }
                    },
                    "BatchMigrateResourcesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "partialResults": {
                          "rule": "repeated",
                          "type": "PartialResult",
                          "id": 2
                        }
                      },
                      "nested": {
                        "PartialResult": {
                          "oneofs": {
                            "result": {
                              "oneof": [
                                "error",
                                "model",
                                "dataset"
                              ]
                            }
                          },
                          "fields": {
                            "error": {
                              "type": "google.rpc.Status",
                              "id": 2
                            },
                            "model": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                              }
                            },
                            "dataset": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                              }
                            },
                            "request": {
                              "type": "MigrateResourceRequest",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ModelEvaluation": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/ModelEvaluation",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metricsSchemaUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metrics": {
                          "type": "google.protobuf.Value",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "sliceDimensions": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ModelEvaluationSlice": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/ModelEvaluationSlice",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "slice": {
                          "type": "Slice",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metricsSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metrics": {
                          "type": "google.protobuf.Value",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Slice": {
                          "fields": {
                            "dimension": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "ModelService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "UploadModel": {
                          "requestType": "UploadModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/models:upload",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,model",
                            "(google.longrunning.operation_info).response_type": "UploadModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "UploadModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/models:upload",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,model"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UploadModelResponse",
                                "metadata_type": "UploadModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetModel": {
                          "requestType": "GetModelRequest",
                          "responseType": "Model",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/models/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/models/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModels": {
                          "requestType": "ListModelsRequest",
                          "responseType": "ListModelsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/models",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/models"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateModel": {
                          "requestType": "UpdateModelRequest",
                          "responseType": "Model",
                          "options": {
                            "(google.api.http).patch": "/v1/{model.name=projects/*/locations/*/models/*}",
                            "(google.api.http).body": "model",
                            "(google.api.method_signature)": "model,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{model.name=projects/*/locations/*/models/*}",
                                "body": "model"
                              }
                            },
                            {
                              "(google.api.method_signature)": "model,update_mask"
                            }
                          ]
                        },
                        "DeleteModel": {
                          "requestType": "DeleteModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/models/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/models/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ExportModel": {
                          "requestType": "ExportModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/models/*}:export",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,output_config",
                            "(google.longrunning.operation_info).response_type": "ExportModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "ExportModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/models/*}:export",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,output_config"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ExportModelResponse",
                                "metadata_type": "ExportModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetModelEvaluation": {
                          "requestType": "GetModelEvaluationRequest",
                          "responseType": "ModelEvaluation",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/models/*/evaluations/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/models/*/evaluations/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModelEvaluations": {
                          "requestType": "ListModelEvaluationsRequest",
                          "responseType": "ListModelEvaluationsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/models/*}/evaluations",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/models/*}/evaluations"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetModelEvaluationSlice": {
                          "requestType": "GetModelEvaluationSliceRequest",
                          "responseType": "ModelEvaluationSlice",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/models/*/evaluations/*/slices/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/models/*/evaluations/*/slices/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModelEvaluationSlices": {
                          "requestType": "ListModelEvaluationSlicesRequest",
                          "responseType": "ListModelEvaluationSlicesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "UploadModelRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "model": {
                          "type": "Model",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UploadModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UploadModelResponse": {
                      "fields": {
                        "model": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "GetModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "ListModelsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListModelsResponse": {
                      "fields": {
                        "models": {
                          "rule": "repeated",
                          "type": "Model",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateModelRequest": {
                      "fields": {
                        "model": {
                          "type": "Model",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "ExportModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "outputConfig": {
                          "type": "OutputConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "OutputConfig": {
                          "fields": {
                            "exportFormatId": {
                              "type": "string",
                              "id": 1
                            },
                            "artifactDestination": {
                              "type": "GcsDestination",
                              "id": 3
                            },
                            "imageDestination": {
                              "type": "ContainerRegistryDestination",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "ExportModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "outputInfo": {
                          "type": "OutputInfo",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "OutputInfo": {
                          "fields": {
                            "artifactOutputUri": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "imageOutputUri": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "ExportModelResponse": {
                      "fields": {}
                    },
                    "GetModelEvaluationRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluation"
                          }
                        }
                      }
                    },
                    "ListModelEvaluationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelEvaluationsResponse": {
                      "fields": {
                        "modelEvaluations": {
                          "rule": "repeated",
                          "type": "ModelEvaluation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetModelEvaluationSliceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluationSlice"
                          }
                        }
                      }
                    },
                    "ListModelEvaluationSlicesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluation"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelEvaluationSlicesResponse": {
                      "fields": {
                        "modelEvaluationSlices": {
                          "rule": "repeated",
                          "type": "ModelEvaluationSlice",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "PipelineService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateTrainingPipeline": {
                          "requestType": "CreateTrainingPipelineRequest",
                          "responseType": "TrainingPipeline",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/trainingPipelines",
                            "(google.api.http).body": "training_pipeline",
                            "(google.api.method_signature)": "parent,training_pipeline"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/trainingPipelines",
                                "body": "training_pipeline"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,training_pipeline"
                            }
                          ]
                        },
                        "GetTrainingPipeline": {
                          "requestType": "GetTrainingPipelineRequest",
                          "responseType": "TrainingPipeline",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/trainingPipelines/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/trainingPipelines/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTrainingPipelines": {
                          "requestType": "ListTrainingPipelinesRequest",
                          "responseType": "ListTrainingPipelinesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/trainingPipelines",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/trainingPipelines"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTrainingPipeline": {
                          "requestType": "DeleteTrainingPipelineRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/trainingPipelines/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/trainingPipelines/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelTrainingPipeline": {
                          "requestType": "CancelTrainingPipelineRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/trainingPipelines/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/trainingPipelines/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        }
                      }
                    },
                    "CreateTrainingPipelineRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "trainingPipeline": {
                          "type": "TrainingPipeline",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "ListTrainingPipelinesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListTrainingPipelinesResponse": {
                      "fields": {
                        "trainingPipelines": {
                          "rule": "repeated",
                          "type": "TrainingPipeline",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "CancelTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "PredictionService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "Predict": {
                          "requestType": "PredictRequest",
                          "responseType": "PredictResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:predict",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,instances,parameters"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{endpoint=projects/*/locations/*/endpoints/*}:predict",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,instances,parameters"
                            }
                          ]
                        }
                      }
                    },
                    "PredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parameters": {
                          "type": "google.protobuf.Value",
                          "id": 3
                        }
                      }
                    },
                    "PredictResponse": {
                      "fields": {
                        "predictions": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 1
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "schema": {
                      "nested": {
                        "predict": {
                          "nested": {
                            "instance": {
                              "options": {
                                "go_package": "google.golang.org/genproto/googleapis/cloud/aiplatform/v1/schema/predict/instance;instance",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionInstanceProto",
                                "java_package": "com.google.cloud.aiplatform.v1.schema.predict.instance"
                              },
                              "nested": {
                                "ImageClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TextClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TextExtractionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "key": {
                                      "type": "string",
                                      "id": 3
                                    }
                                  }
                                },
                                "TextSentimentPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                },
                                "VideoClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                }
                              }
                            },
                            "params": {
                              "options": {
                                "go_package": "google.golang.org/genproto/googleapis/cloud/aiplatform/v1/schema/predict/params;params",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionParamsProto",
                                "java_package": "com.google.cloud.aiplatform.v1.schema.predict.params"
                              },
                              "nested": {
                                "ImageClassificationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "VideoClassificationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    },
                                    "segmentClassification": {
                                      "type": "bool",
                                      "id": 3
                                    },
                                    "shotClassification": {
                                      "type": "bool",
                                      "id": 4
                                    },
                                    "oneSecIntervalClassification": {
                                      "type": "bool",
                                      "id": 5
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    },
                                    "minBoundingBoxSize": {
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                }
                              }
                            },
                            "prediction": {
                              "options": {
                                "go_package": "google.golang.org/genproto/googleapis/cloud/aiplatform/v1/schema/predict/prediction;prediction",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionResultProto",
                                "java_package": "com.google.cloud.aiplatform.v1.schema.predict.prediction"
                              },
                              "nested": {
                                "ClassificationPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 3
                                    },
                                    "bboxes": {
                                      "rule": "repeated",
                                      "type": "google.protobuf.ListValue",
                                      "id": 4
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionResult": {
                                  "fields": {
                                    "categoryMask": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "confidenceMask": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TabularClassificationPredictionResult": {
                                  "fields": {
                                    "classes": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 1
                                    },
                                    "scores": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 2
                                    }
                                  }
                                },
                                "TabularRegressionPredictionResult": {
                                  "fields": {
                                    "value": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "lowerBound": {
                                      "type": "float",
                                      "id": 2
                                    },
                                    "upperBound": {
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                },
                                "TextExtractionPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "textSegmentStartOffsets": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 3
                                    },
                                    "textSegmentEndOffsets": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 4
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 5
                                    }
                                  }
                                },
                                "TextSentimentPredictionResult": {
                                  "fields": {
                                    "sentiment": {
                                      "type": "int32",
                                      "id": 1
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 5
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 6
                                    }
                                  }
                                },
                                "VideoClassificationPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "type": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 5
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 6
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 5
                                    },
                                    "frames": {
                                      "rule": "repeated",
                                      "type": "Frame",
                                      "id": 6
                                    }
                                  },
                                  "nested": {
                                    "Frame": {
                                      "fields": {
                                        "timeOffset": {
                                          "type": "google.protobuf.Duration",
                                          "id": 1
                                        },
                                        "xMin": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 2
                                        },
                                        "xMax": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 3
                                        },
                                        "yMin": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 4
                                        },
                                        "yMax": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 5
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trainingjob": {
                          "nested": {
                            "definition": {
                              "options": {
                                "go_package": "google.golang.org/genproto/googleapis/cloud/aiplatform/v1/schema/trainingjob/definition;definition",
                                "java_multiple_files": true,
                                "java_outer_classname": "AutoMLVideoObjectTrackingProto",
                                "java_package": "com.google.cloud.aiplatform.v1.schema.trainingjob.definition"
                              },
                              "nested": {
                                "AutoMlImageClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageClassificationInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageClassificationMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageClassificationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "baseModelId": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 3
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 4
                                    },
                                    "multiLabel": {
                                      "type": "bool",
                                      "id": 5
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_TF_LOW_LATENCY_1": 2,
                                        "MOBILE_TF_VERSATILE_1": 3,
                                        "MOBILE_TF_HIGH_ACCURACY_1": 4
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageClassificationMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetection": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageObjectDetectionInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageObjectDetectionMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetectionInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 2
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 3
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD_HIGH_ACCURACY_1": 1,
                                        "CLOUD_LOW_LATENCY_1": 2,
                                        "MOBILE_TF_LOW_LATENCY_1": 3,
                                        "MOBILE_TF_VERSATILE_1": 4,
                                        "MOBILE_TF_HIGH_ACCURACY_1": 5
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetectionMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageSegmentation": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageSegmentationInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageSegmentationMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageSegmentationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 2
                                    },
                                    "baseModelId": {
                                      "type": "string",
                                      "id": 3
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD_HIGH_ACCURACY_1": 1,
                                        "CLOUD_LOW_ACCURACY_1": 2,
                                        "MOBILE_TF_LOW_LATENCY_1": 3
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageSegmentationMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlTables": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTablesInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlTablesMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlTablesInputs": {
                                  "oneofs": {
                                    "additionalOptimizationObjectiveConfig": {
                                      "oneof": [
                                        "optimizationObjectiveRecallValue",
                                        "optimizationObjectivePrecisionValue"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "optimizationObjectiveRecallValue": {
                                      "type": "float",
                                      "id": 5
                                    },
                                    "optimizationObjectivePrecisionValue": {
                                      "type": "float",
                                      "id": 6
                                    },
                                    "predictionType": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "targetColumn": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "transformations": {
                                      "rule": "repeated",
                                      "type": "Transformation",
                                      "id": 3
                                    },
                                    "optimizationObjective": {
                                      "type": "string",
                                      "id": 4
                                    },
                                    "trainBudgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 7
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 8
                                    },
                                    "weightColumnName": {
                                      "type": "string",
                                      "id": 9
                                    },
                                    "exportEvaluatedDataItemsConfig": {
                                      "type": "ExportEvaluatedDataItemsConfig",
                                      "id": 10
                                    }
                                  },
                                  "nested": {
                                    "Transformation": {
                                      "oneofs": {
                                        "transformationDetail": {
                                          "oneof": [
                                            "auto",
                                            "numeric",
                                            "categorical",
                                            "timestamp",
                                            "text",
                                            "repeatedNumeric",
                                            "repeatedCategorical",
                                            "repeatedText"
                                          ]
                                        }
                                      },
                                      "fields": {
                                        "auto": {
                                          "type": "AutoTransformation",
                                          "id": 1
                                        },
                                        "numeric": {
                                          "type": "NumericTransformation",
                                          "id": 2
                                        },
                                        "categorical": {
                                          "type": "CategoricalTransformation",
                                          "id": 3
                                        },
                                        "timestamp": {
                                          "type": "TimestampTransformation",
                                          "id": 4
                                        },
                                        "text": {
                                          "type": "TextTransformation",
                                          "id": 5
                                        },
                                        "repeatedNumeric": {
                                          "type": "NumericArrayTransformation",
                                          "id": 6
                                        },
                                        "repeatedCategorical": {
                                          "type": "CategoricalArrayTransformation",
                                          "id": 7
                                        },
                                        "repeatedText": {
                                          "type": "TextArrayTransformation",
                                          "id": 8
                                        }
                                      },
                                      "nested": {
                                        "AutoTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "NumericTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 2
                                            }
                                          }
                                        },
                                        "CategoricalTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "TimestampTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "timeFormat": {
                                              "type": "string",
                                              "id": 2
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 3
                                            }
                                          }
                                        },
                                        "TextTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "NumericArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 2
                                            }
                                          }
                                        },
                                        "CategoricalArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "TextArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "AutoMlTablesMetadata": {
                                  "fields": {
                                    "trainCostMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    }
                                  }
                                },
                                "ExportEvaluatedDataItemsConfig": {
                                  "fields": {
                                    "destinationBigqueryUri": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "overrideExistingTable": {
                                      "type": "bool",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlTextClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextClassificationInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextClassificationInputs": {
                                  "fields": {
                                    "multiLabel": {
                                      "type": "bool",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextExtraction": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextExtractionInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextExtractionInputs": {
                                  "fields": {}
                                },
                                "AutoMlTextSentiment": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextSentimentInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextSentimentInputs": {
                                  "fields": {
                                    "sentimentMax": {
                                      "type": "int32",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoActionRecognition": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoActionRecognitionInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoActionRecognitionInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlVideoClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoClassificationInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoClassificationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2,
                                        "MOBILE_JETSON_VERSATILE_1": 3
                                      }
                                    }
                                  }
                                },
                                "AutoMlVideoObjectTracking": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoObjectTrackingInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoObjectTrackingInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2,
                                        "MOBILE_CORAL_VERSATILE_1": 3,
                                        "MOBILE_CORAL_LOW_LATENCY_1": 4,
                                        "MOBILE_JETSON_VERSATILE_1": 5,
                                        "MOBILE_JETSON_LOW_LATENCY_1": 6
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "SpecialistPoolService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateSpecialistPool": {
                          "requestType": "CreateSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/specialistPools",
                            "(google.api.http).body": "specialist_pool",
                            "(google.api.method_signature)": "parent,specialist_pool",
                            "(google.longrunning.operation_info).response_type": "SpecialistPool",
                            "(google.longrunning.operation_info).metadata_type": "CreateSpecialistPoolOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/specialistPools",
                                "body": "specialist_pool"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,specialist_pool"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "SpecialistPool",
                                "metadata_type": "CreateSpecialistPoolOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetSpecialistPool": {
                          "requestType": "GetSpecialistPoolRequest",
                          "responseType": "SpecialistPool",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/specialistPools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListSpecialistPools": {
                          "requestType": "ListSpecialistPoolsRequest",
                          "responseType": "ListSpecialistPoolsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/specialistPools",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/specialistPools"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteSpecialistPool": {
                          "requestType": "DeleteSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/specialistPools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateSpecialistPool": {
                          "requestType": "UpdateSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{specialist_pool.name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.http).body": "specialist_pool",
                            "(google.api.method_signature)": "specialist_pool,update_mask",
                            "(google.longrunning.operation_info).response_type": "SpecialistPool",
                            "(google.longrunning.operation_info).metadata_type": "UpdateSpecialistPoolOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{specialist_pool.name=projects/*/locations/*/specialistPools/*}",
                                "body": "specialist_pool"
                              }
                            },
                            {
                              "(google.api.method_signature)": "specialist_pool,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "SpecialistPool",
                                "metadata_type": "UpdateSpecialistPoolOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateSpecialistPoolRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "specialistPool": {
                          "type": "SpecialistPool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateSpecialistPoolOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetSpecialistPoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        }
                      }
                    },
                    "ListSpecialistPoolsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 4
                        }
                      }
                    },
                    "ListSpecialistPoolsResponse": {
                      "fields": {
                        "specialistPools": {
                          "rule": "repeated",
                          "type": "SpecialistPool",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteSpecialistPoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "UpdateSpecialistPoolRequest": {
                      "fields": {
                        "specialistPool": {
                          "type": "SpecialistPool",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateSpecialistPoolOperationMetadata": {
                      "fields": {
                        "specialistPool": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        },
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 2
                        }
                      }
                    }
                  }
                },
                "v1beta1": {
                  "options": {
                    "go_package": "google.golang.org/genproto/googleapis/cloud/aiplatform/v1beta1;aiplatform",
                    "java_multiple_files": true,
                    "java_outer_classname": "VizierServiceProto",
                    "java_package": "com.google.cloud.aiplatform.v1beta1",
                    "(google.api.resource_definition).type": "datalabeling.googleapis.com/AnnotatedDataset",
                    "(google.api.resource_definition).pattern": "projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}"
                  },
                  "nested": {
                    "AcceleratorType": {
                      "values": {
                        "ACCELERATOR_TYPE_UNSPECIFIED": 0,
                        "NVIDIA_TESLA_K80": 1,
                        "NVIDIA_TESLA_P100": 2,
                        "NVIDIA_TESLA_V100": 3,
                        "NVIDIA_TESLA_P4": 4,
                        "NVIDIA_TESLA_T4": 5
                      }
                    },
                    "Annotation": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Annotation",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}/annotations/{annotation}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "payloadSchemaUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "payload": {
                          "type": "google.protobuf.Value",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "annotationSource": {
                          "type": "UserActionReference",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UserActionReference": {
                      "oneofs": {
                        "reference": {
                          "oneof": [
                            "operation",
                            "dataLabelingJob"
                          ]
                        }
                      },
                      "fields": {
                        "operation": {
                          "type": "string",
                          "id": 1
                        },
                        "dataLabelingJob": {
                          "type": "string",
                          "id": 2
                        },
                        "method": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "AnnotationSpec": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/AnnotationSpec",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "BatchPredictionJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/BatchPredictionJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "inputConfig": {
                          "type": "InputConfig",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "modelParameters": {
                          "type": "google.protobuf.Value",
                          "id": 5
                        },
                        "outputConfig": {
                          "type": "OutputConfig",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "dedicatedResources": {
                          "type": "BatchDedicatedResources",
                          "id": 7
                        },
                        "manualBatchTuningParameters": {
                          "type": "ManualBatchTuningParameters",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "generateExplanation": {
                          "type": "bool",
                          "id": 23
                        },
                        "explanationSpec": {
                          "type": "ExplanationSpec",
                          "id": 25
                        },
                        "outputInfo": {
                          "type": "OutputInfo",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "partialFailures": {
                          "rule": "repeated",
                          "type": "google.rpc.Status",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "resourcesConsumed": {
                          "type": "ResourcesConsumed",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "completionStats": {
                          "type": "CompletionStats",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 16,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 19
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 24
                        }
                      },
                      "nested": {
                        "InputConfig": {
                          "oneofs": {
                            "source": {
                              "oneof": [
                                "gcsSource",
                                "bigquerySource"
                              ]
                            }
                          },
                          "fields": {
                            "gcsSource": {
                              "type": "GcsSource",
                              "id": 2
                            },
                            "bigquerySource": {
                              "type": "BigQuerySource",
                              "id": 3
                            },
                            "instancesFormat": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "OutputConfig": {
                          "oneofs": {
                            "destination": {
                              "oneof": [
                                "gcsDestination",
                                "bigqueryDestination"
                              ]
                            }
                          },
                          "fields": {
                            "gcsDestination": {
                              "type": "GcsDestination",
                              "id": 2
                            },
                            "bigqueryDestination": {
                              "type": "BigQueryDestination",
                              "id": 3
                            },
                            "predictionsFormat": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "OutputInfo": {
                          "oneofs": {
                            "outputLocation": {
                              "oneof": [
                                "gcsOutputDirectory",
                                "bigqueryOutputDataset"
                              ]
                            }
                          },
                          "fields": {
                            "gcsOutputDirectory": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "bigqueryOutputDataset": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "CompletionStats": {
                      "fields": {
                        "successfulCount": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "failedCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "incompleteCount": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "EncryptionSpec": {
                      "fields": {
                        "kmsKeyName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Explanation": {
                      "fields": {
                        "attributions": {
                          "rule": "repeated",
                          "type": "Attribution",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ModelExplanation": {
                      "fields": {
                        "meanAttributions": {
                          "rule": "repeated",
                          "type": "Attribution",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Attribution": {
                      "fields": {
                        "baselineOutputValue": {
                          "type": "double",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "instanceOutputValue": {
                          "type": "double",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "featureAttributions": {
                          "type": "google.protobuf.Value",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "outputIndex": {
                          "rule": "repeated",
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "outputDisplayName": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "approximationError": {
                          "type": "double",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "outputName": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "ExplanationSpec": {
                      "fields": {
                        "parameters": {
                          "type": "ExplanationParameters",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadata": {
                          "type": "ExplanationMetadata",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExplanationParameters": {
                      "oneofs": {
                        "method": {
                          "oneof": [
                            "sampledShapleyAttribution",
                            "integratedGradientsAttribution",
                            "xraiAttribution"
                          ]
                        }
                      },
                      "fields": {
                        "sampledShapleyAttribution": {
                          "type": "SampledShapleyAttribution",
                          "id": 1
                        },
                        "integratedGradientsAttribution": {
                          "type": "IntegratedGradientsAttribution",
                          "id": 2
                        },
                        "xraiAttribution": {
                          "type": "XraiAttribution",
                          "id": 3
                        },
                        "topK": {
                          "type": "int32",
                          "id": 4
                        },
                        "outputIndices": {
                          "type": "google.protobuf.ListValue",
                          "id": 5
                        }
                      }
                    },
                    "SampledShapleyAttribution": {
                      "fields": {
                        "pathCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "IntegratedGradientsAttribution": {
                      "fields": {
                        "stepCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "smoothGradConfig": {
                          "type": "SmoothGradConfig",
                          "id": 2
                        }
                      }
                    },
                    "XraiAttribution": {
                      "fields": {
                        "stepCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "smoothGradConfig": {
                          "type": "SmoothGradConfig",
                          "id": 2
                        }
                      }
                    },
                    "SmoothGradConfig": {
                      "oneofs": {
                        "GradientNoiseSigma": {
                          "oneof": [
                            "noiseSigma",
                            "featureNoiseSigma"
                          ]
                        }
                      },
                      "fields": {
                        "noiseSigma": {
                          "type": "float",
                          "id": 1
                        },
                        "featureNoiseSigma": {
                          "type": "FeatureNoiseSigma",
                          "id": 2
                        },
                        "noisySampleCount": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "FeatureNoiseSigma": {
                      "fields": {
                        "noiseSigma": {
                          "rule": "repeated",
                          "type": "NoiseSigmaForFeature",
                          "id": 1
                        }
                      },
                      "nested": {
                        "NoiseSigmaForFeature": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "sigma": {
                              "type": "float",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "ExplanationSpecOverride": {
                      "fields": {
                        "parameters": {
                          "type": "ExplanationParameters",
                          "id": 1
                        },
                        "metadata": {
                          "type": "ExplanationMetadataOverride",
                          "id": 2
                        }
                      }
                    },
                    "ExplanationMetadataOverride": {
                      "fields": {
                        "inputs": {
                          "keyType": "string",
                          "type": "InputMetadataOverride",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "InputMetadataOverride": {
                          "fields": {
                            "inputBaselines": {
                              "rule": "repeated",
                              "type": "google.protobuf.Value",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ExplanationMetadata": {
                      "fields": {
                        "inputs": {
                          "keyType": "string",
                          "type": "InputMetadata",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "outputs": {
                          "keyType": "string",
                          "type": "OutputMetadata",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "featureAttributionsSchemaUri": {
                          "type": "string",
                          "id": 3
                        }
                      },
                      "nested": {
                        "InputMetadata": {
                          "fields": {
                            "inputBaselines": {
                              "rule": "repeated",
                              "type": "google.protobuf.Value",
                              "id": 1
                            },
                            "inputTensorName": {
                              "type": "string",
                              "id": 2
                            },
                            "encoding": {
                              "type": "Encoding",
                              "id": 3
                            },
                            "modality": {
                              "type": "string",
                              "id": 4
                            },
                            "featureValueDomain": {
                              "type": "FeatureValueDomain",
                              "id": 5
                            },
                            "indicesTensorName": {
                              "type": "string",
                              "id": 6
                            },
                            "denseShapeTensorName": {
                              "type": "string",
                              "id": 7
                            },
                            "indexFeatureMapping": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 8
                            },
                            "encodedTensorName": {
                              "type": "string",
                              "id": 9
                            },
                            "encodedBaselines": {
                              "rule": "repeated",
                              "type": "google.protobuf.Value",
                              "id": 10
                            },
                            "visualization": {
                              "type": "Visualization",
                              "id": 11
                            },
                            "groupName": {
                              "type": "string",
                              "id": 12
                            }
                          },
                          "nested": {
                            "FeatureValueDomain": {
                              "fields": {
                                "minValue": {
                                  "type": "float",
                                  "id": 1
                                },
                                "maxValue": {
                                  "type": "float",
                                  "id": 2
                                },
                                "originalMean": {
                                  "type": "float",
                                  "id": 3
                                },
                                "originalStddev": {
                                  "type": "float",
                                  "id": 4
                                }
                              }
                            },
                            "Visualization": {
                              "fields": {
                                "type": {
                                  "type": "Type",
                                  "id": 1
                                },
                                "polarity": {
                                  "type": "Polarity",
                                  "id": 2
                                },
                                "colorMap": {
                                  "type": "ColorMap",
                                  "id": 3
                                },
                                "clipPercentUpperbound": {
                                  "type": "float",
                                  "id": 4
                                },
                                "clipPercentLowerbound": {
                                  "type": "float",
                                  "id": 5
                                },
                                "overlayType": {
                                  "type": "OverlayType",
                                  "id": 6
                                }
                              },
                              "nested": {
                                "Type": {
                                  "values": {
                                    "TYPE_UNSPECIFIED": 0,
                                    "PIXELS": 1,
                                    "OUTLINES": 2
                                  }
                                },
                                "Polarity": {
                                  "values": {
                                    "POLARITY_UNSPECIFIED": 0,
                                    "POSITIVE": 1,
                                    "NEGATIVE": 2,
                                    "BOTH": 3
                                  }
                                },
                                "ColorMap": {
                                  "values": {
                                    "COLOR_MAP_UNSPECIFIED": 0,
                                    "PINK_GREEN": 1,
                                    "VIRIDIS": 2,
                                    "RED": 3,
                                    "GREEN": 4,
                                    "RED_GREEN": 6,
                                    "PINK_WHITE_GREEN": 5
                                  }
                                },
                                "OverlayType": {
                                  "values": {
                                    "OVERLAY_TYPE_UNSPECIFIED": 0,
                                    "NONE": 1,
                                    "ORIGINAL": 2,
                                    "GRAYSCALE": 3,
                                    "MASK_BLACK": 4
                                  }
                                }
                              }
                            },
                            "Encoding": {
                              "values": {
                                "ENCODING_UNSPECIFIED": 0,
                                "IDENTITY": 1,
                                "BAG_OF_FEATURES": 2,
                                "BAG_OF_FEATURES_SPARSE": 3,
                                "INDICATOR": 4,
                                "COMBINED_EMBEDDING": 5,
                                "CONCAT_EMBEDDING": 6
                              }
                            }
                          }
                        },
                        "OutputMetadata": {
                          "oneofs": {
                            "displayNameMapping": {
                              "oneof": [
                                "indexDisplayNameMapping",
                                "displayNameMappingKey"
                              ]
                            }
                          },
                          "fields": {
                            "indexDisplayNameMapping": {
                              "type": "google.protobuf.Value",
                              "id": 1
                            },
                            "displayNameMappingKey": {
                              "type": "string",
                              "id": 2
                            },
                            "outputTensorName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "GcsSource": {
                      "fields": {
                        "uris": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GcsDestination": {
                      "fields": {
                        "outputUriPrefix": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BigQuerySource": {
                      "fields": {
                        "inputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "BigQueryDestination": {
                      "fields": {
                        "outputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ContainerRegistryDestination": {
                      "fields": {
                        "outputUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "JobState": {
                      "values": {
                        "JOB_STATE_UNSPECIFIED": 0,
                        "JOB_STATE_QUEUED": 1,
                        "JOB_STATE_PENDING": 2,
                        "JOB_STATE_RUNNING": 3,
                        "JOB_STATE_SUCCEEDED": 4,
                        "JOB_STATE_FAILED": 5,
                        "JOB_STATE_CANCELLING": 6,
                        "JOB_STATE_CANCELLED": 7,
                        "JOB_STATE_PAUSED": 8,
                        "JOB_STATE_EXPIRED": 9
                      }
                    },
                    "MachineSpec": {
                      "fields": {
                        "machineType": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "acceleratorType": {
                          "type": "AcceleratorType",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "acceleratorCount": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "DedicatedResources": {
                      "fields": {
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "minReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "autoscalingMetricSpecs": {
                          "rule": "repeated",
                          "type": "AutoscalingMetricSpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "AutomaticResources": {
                      "fields": {
                        "minReplicaCount": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "BatchDedicatedResources": {
                      "fields": {
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "startingReplicaCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "maxReplicaCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "ResourcesConsumed": {
                      "fields": {
                        "replicaHours": {
                          "type": "double",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DiskSpec": {
                      "fields": {
                        "bootDiskType": {
                          "type": "string",
                          "id": 1
                        },
                        "bootDiskSizeGb": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "AutoscalingMetricSpec": {
                      "fields": {
                        "metricName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "target": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "ManualBatchTuningParameters": {
                      "fields": {
                        "batchSize": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "CustomJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/CustomJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/customJobs/{custom_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "jobSpec": {
                          "type": "CustomJobSpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 12
                        }
                      }
                    },
                    "CustomJobSpec": {
                      "fields": {
                        "workerPoolSpecs": {
                          "rule": "repeated",
                          "type": "WorkerPoolSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "scheduling": {
                          "type": "Scheduling",
                          "id": 3
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 4
                        },
                        "network": {
                          "type": "string",
                          "id": 5
                        },
                        "baseOutputDirectory": {
                          "type": "GcsDestination",
                          "id": 6
                        }
                      }
                    },
                    "WorkerPoolSpec": {
                      "oneofs": {
                        "task": {
                          "oneof": [
                            "containerSpec",
                            "pythonPackageSpec"
                          ]
                        }
                      },
                      "fields": {
                        "containerSpec": {
                          "type": "ContainerSpec",
                          "id": 6
                        },
                        "pythonPackageSpec": {
                          "type": "PythonPackageSpec",
                          "id": 7
                        },
                        "machineSpec": {
                          "type": "MachineSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "replicaCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "diskSpec": {
                          "type": "DiskSpec",
                          "id": 5
                        }
                      }
                    },
                    "ContainerSpec": {
                      "fields": {
                        "imageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "command": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "PythonPackageSpec": {
                      "fields": {
                        "executorImageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "packageUris": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "pythonModule": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "Scheduling": {
                      "fields": {
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 1
                        },
                        "restartJobOnWorkerRestart": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "EnvVar": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "value": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DataItem": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DataItem",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "payload": {
                          "type": "google.protobuf.Value",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DataLabelingJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/DataLabelingJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "datasets": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "annotationLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 12
                        },
                        "labelerCount": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "instructionUri": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputsSchemaUri": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputs": {
                          "type": "google.protobuf.Value",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labelingProgress": {
                          "type": "int32",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "currentSpend": {
                          "type": "google.type.Money",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 22,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 11
                        },
                        "specialistPools": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 16
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 20
                        },
                        "activeLearningConfig": {
                          "type": "ActiveLearningConfig",
                          "id": 21
                        }
                      }
                    },
                    "ActiveLearningConfig": {
                      "oneofs": {
                        "humanLabelingBudget": {
                          "oneof": [
                            "maxDataItemCount",
                            "maxDataItemPercentage"
                          ]
                        }
                      },
                      "fields": {
                        "maxDataItemCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "maxDataItemPercentage": {
                          "type": "int32",
                          "id": 2
                        },
                        "sampleConfig": {
                          "type": "SampleConfig",
                          "id": 3
                        },
                        "trainingConfig": {
                          "type": "TrainingConfig",
                          "id": 4
                        }
                      }
                    },
                    "SampleConfig": {
                      "oneofs": {
                        "initialBatchSampleSize": {
                          "oneof": [
                            "initialBatchSamplePercentage"
                          ]
                        },
                        "followingBatchSampleSize": {
                          "oneof": [
                            "followingBatchSamplePercentage"
                          ]
                        }
                      },
                      "fields": {
                        "initialBatchSamplePercentage": {
                          "type": "int32",
                          "id": 1
                        },
                        "followingBatchSamplePercentage": {
                          "type": "int32",
                          "id": 3
                        },
                        "sampleStrategy": {
                          "type": "SampleStrategy",
                          "id": 5
                        }
                      },
                      "nested": {
                        "SampleStrategy": {
                          "values": {
                            "SAMPLE_STRATEGY_UNSPECIFIED": 0,
                            "UNCERTAINTY": 1
                          }
                        }
                      }
                    },
                    "TrainingConfig": {
                      "fields": {
                        "timeoutTrainingMilliHours": {
                          "type": "int64",
                          "id": 1
                        }
                      }
                    },
                    "SpecialistPool": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/SpecialistPool",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/specialistPools/{specialist_pool}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "specialistManagersCount": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "specialistManagerEmails": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 4
                        },
                        "pendingDataLabelingJobs": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Dataset": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Dataset",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/datasets/{dataset}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadataSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "etag": {
                          "type": "string",
                          "id": 6
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 7
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 11
                        }
                      }
                    },
                    "ImportDataConfig": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "gcsSource"
                          ]
                        }
                      },
                      "fields": {
                        "gcsSource": {
                          "type": "GcsSource",
                          "id": 1
                        },
                        "dataItemLabels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "importSchemaUri": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExportDataConfig": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "gcsDestination"
                          ]
                        }
                      },
                      "fields": {
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 1
                        },
                        "annotationsFilter": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DatasetService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateDataset": {
                          "requestType": "CreateDatasetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/datasets",
                            "(google.api.http).body": "dataset",
                            "(google.api.method_signature)": "parent,dataset",
                            "(google.longrunning.operation_info).response_type": "Dataset",
                            "(google.longrunning.operation_info).metadata_type": "CreateDatasetOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/datasets",
                                "body": "dataset"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,dataset"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Dataset",
                                "metadata_type": "CreateDatasetOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetDataset": {
                          "requestType": "GetDatasetRequest",
                          "responseType": "Dataset",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/datasets/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/datasets/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateDataset": {
                          "requestType": "UpdateDatasetRequest",
                          "responseType": "Dataset",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{dataset.name=projects/*/locations/*/datasets/*}",
                            "(google.api.http).body": "dataset",
                            "(google.api.method_signature)": "dataset,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{dataset.name=projects/*/locations/*/datasets/*}",
                                "body": "dataset"
                              }
                            },
                            {
                              "(google.api.method_signature)": "dataset,update_mask"
                            }
                          ]
                        },
                        "ListDatasets": {
                          "requestType": "ListDatasetsRequest",
                          "responseType": "ListDatasetsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/datasets",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/datasets"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteDataset": {
                          "requestType": "DeleteDatasetRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/datasets/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/datasets/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ImportData": {
                          "requestType": "ImportDataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/datasets/*}:import",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,import_configs",
                            "(google.longrunning.operation_info).response_type": "ImportDataResponse",
                            "(google.longrunning.operation_info).metadata_type": "ImportDataOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/datasets/*}:import",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,import_configs"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ImportDataResponse",
                                "metadata_type": "ImportDataOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ExportData": {
                          "requestType": "ExportDataRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/datasets/*}:export",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,export_config",
                            "(google.longrunning.operation_info).response_type": "ExportDataResponse",
                            "(google.longrunning.operation_info).metadata_type": "ExportDataOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/datasets/*}:export",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,export_config"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ExportDataResponse",
                                "metadata_type": "ExportDataOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListDataItems": {
                          "requestType": "ListDataItemsRequest",
                          "responseType": "ListDataItemsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/datasets/*}/dataItems",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/datasets/*}/dataItems"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetAnnotationSpec": {
                          "requestType": "GetAnnotationSpecRequest",
                          "responseType": "AnnotationSpec",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListAnnotations": {
                          "requestType": "ListAnnotationsRequest",
                          "responseType": "ListAnnotationsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/datasets/*/dataItems/*}/annotations",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/datasets/*/dataItems/*}/annotations"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateDatasetRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "dataset": {
                          "type": "Dataset",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateDatasetOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetDatasetRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "UpdateDatasetRequest": {
                      "fields": {
                        "dataset": {
                          "type": "Dataset",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListDatasetsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDatasetsResponse": {
                      "fields": {
                        "datasets": {
                          "rule": "repeated",
                          "type": "Dataset",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteDatasetRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        }
                      }
                    },
                    "ImportDataRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "importConfigs": {
                          "rule": "repeated",
                          "type": "ImportDataConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ImportDataResponse": {
                      "fields": {}
                    },
                    "ImportDataOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "ExportDataRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "exportConfig": {
                          "type": "ExportDataConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ExportDataResponse": {
                      "fields": {
                        "exportedFiles": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "ExportDataOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "gcsOutputDirectory": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListDataItemsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDataItemsResponse": {
                      "fields": {
                        "dataItems": {
                          "rule": "repeated",
                          "type": "DataItem",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetAnnotationSpecRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/AnnotationSpec"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "ListAnnotationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataItem"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListAnnotationsResponse": {
                      "fields": {
                        "annotations": {
                          "rule": "repeated",
                          "type": "Annotation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GenericOperationMetadata": {
                      "fields": {
                        "partialFailures": {
                          "rule": "repeated",
                          "type": "google.rpc.Status",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DeleteOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "TrainingPipeline": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/TrainingPipeline",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "inputDataConfig": {
                          "type": "InputDataConfig",
                          "id": 3
                        },
                        "trainingTaskDefinition": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trainingTaskInputs": {
                          "type": "google.protobuf.Value",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trainingTaskMetadata": {
                          "type": "google.protobuf.Value",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "modelToUpload": {
                          "type": "Model",
                          "id": 7
                        },
                        "state": {
                          "type": "PipelineState",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 15
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 18
                        }
                      }
                    },
                    "InputDataConfig": {
                      "oneofs": {
                        "split": {
                          "oneof": [
                            "fractionSplit",
                            "filterSplit",
                            "predefinedSplit",
                            "timestampSplit"
                          ]
                        },
                        "destination": {
                          "oneof": [
                            "gcsDestination",
                            "bigqueryDestination"
                          ]
                        }
                      },
                      "fields": {
                        "fractionSplit": {
                          "type": "FractionSplit",
                          "id": 2
                        },
                        "filterSplit": {
                          "type": "FilterSplit",
                          "id": 3
                        },
                        "predefinedSplit": {
                          "type": "PredefinedSplit",
                          "id": 4
                        },
                        "timestampSplit": {
                          "type": "TimestampSplit",
                          "id": 5
                        },
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 8
                        },
                        "bigqueryDestination": {
                          "type": "BigQueryDestination",
                          "id": 10
                        },
                        "datasetId": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "annotationsFilter": {
                          "type": "string",
                          "id": 6
                        },
                        "annotationSchemaUri": {
                          "type": "string",
                          "id": 9
                        }
                      }
                    },
                    "FractionSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        }
                      }
                    },
                    "FilterSplit": {
                      "fields": {
                        "trainingFilter": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "validationFilter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "testFilter": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "PredefinedSplit": {
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TimestampSplit": {
                      "fields": {
                        "trainingFraction": {
                          "type": "double",
                          "id": 1
                        },
                        "validationFraction": {
                          "type": "double",
                          "id": 2
                        },
                        "testFraction": {
                          "type": "double",
                          "id": 3
                        },
                        "key": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Model": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Model",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "predictSchemata": {
                          "type": "PredictSchemata",
                          "id": 4
                        },
                        "metadataSchemaUri": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "metadata": {
                          "type": "google.protobuf.Value",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "supportedExportFormats": {
                          "rule": "repeated",
                          "type": "ExportFormat",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "trainingPipeline": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        },
                        "containerSpec": {
                          "type": "ModelContainerSpec",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "artifactUri": {
                          "type": "string",
                          "id": 26,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "supportedDeploymentResourcesTypes": {
                          "rule": "repeated",
                          "type": "DeploymentResourcesType",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "supportedInputStorageFormats": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "supportedOutputStorageFormats": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "deployedModels": {
                          "rule": "repeated",
                          "type": "DeployedModelRef",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "explanationSpec": {
                          "type": "ExplanationSpec",
                          "id": 23
                        },
                        "etag": {
                          "type": "string",
                          "id": 16
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 17
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 24
                        }
                      },
                      "nested": {
                        "ExportFormat": {
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "exportableContents": {
                              "rule": "repeated",
                              "type": "ExportableContent",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "ExportableContent": {
                              "values": {
                                "EXPORTABLE_CONTENT_UNSPECIFIED": 0,
                                "ARTIFACT": 1,
                                "IMAGE": 2
                              }
                            }
                          }
                        },
                        "DeploymentResourcesType": {
                          "values": {
                            "DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED": 0,
                            "DEDICATED_RESOURCES": 1,
                            "AUTOMATIC_RESOURCES": 2
                          }
                        }
                      }
                    },
                    "PredictSchemata": {
                      "fields": {
                        "instanceSchemaUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "parametersSchemaUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "predictionSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "ModelContainerSpec": {
                      "fields": {
                        "imageUri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "command": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "args": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "env": {
                          "rule": "repeated",
                          "type": "EnvVar",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "ports": {
                          "rule": "repeated",
                          "type": "Port",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "predictRoute": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "healthRoute": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "Port": {
                      "fields": {
                        "containerPort": {
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "DeployedModelRef": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      }
                    },
                    "PipelineState": {
                      "values": {
                        "PIPELINE_STATE_UNSPECIFIED": 0,
                        "PIPELINE_STATE_QUEUED": 1,
                        "PIPELINE_STATE_PENDING": 2,
                        "PIPELINE_STATE_RUNNING": 3,
                        "PIPELINE_STATE_SUCCEEDED": 4,
                        "PIPELINE_STATE_FAILED": 5,
                        "PIPELINE_STATE_CANCELLING": 6,
                        "PIPELINE_STATE_CANCELLED": 7,
                        "PIPELINE_STATE_PAUSED": 8
                      }
                    },
                    "Endpoint": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Endpoint",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/endpoints/{endpoint}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "deployedModels": {
                          "rule": "repeated",
                          "type": "DeployedModel",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 5
                        },
                        "etag": {
                          "type": "string",
                          "id": 6
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 7
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 10
                        }
                      }
                    },
                    "DeployedModel": {
                      "oneofs": {
                        "predictionResources": {
                          "oneof": [
                            "dedicatedResources",
                            "automaticResources"
                          ]
                        }
                      },
                      "fields": {
                        "dedicatedResources": {
                          "type": "DedicatedResources",
                          "id": 7
                        },
                        "automaticResources": {
                          "type": "AutomaticResources",
                          "id": 8
                        },
                        "id": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "explanationSpec": {
                          "type": "ExplanationSpec",
                          "id": 9
                        },
                        "serviceAccount": {
                          "type": "string",
                          "id": 11
                        },
                        "enableContainerLogging": {
                          "type": "bool",
                          "id": 12
                        },
                        "enableAccessLogging": {
                          "type": "bool",
                          "id": 13
                        }
                      }
                    },
                    "EndpointService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateEndpoint": {
                          "requestType": "CreateEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/endpoints",
                            "(google.api.http).body": "endpoint",
                            "(google.api.method_signature)": "parent,endpoint",
                            "(google.longrunning.operation_info).response_type": "Endpoint",
                            "(google.longrunning.operation_info).metadata_type": "CreateEndpointOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/endpoints",
                                "body": "endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,endpoint"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Endpoint",
                                "metadata_type": "CreateEndpointOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetEndpoint": {
                          "requestType": "GetEndpointRequest",
                          "responseType": "Endpoint",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/endpoints/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/endpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListEndpoints": {
                          "requestType": "ListEndpointsRequest",
                          "responseType": "ListEndpointsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/endpoints",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/endpoints"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateEndpoint": {
                          "requestType": "UpdateEndpointRequest",
                          "responseType": "Endpoint",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{endpoint.name=projects/*/locations/*/endpoints/*}",
                            "(google.api.http).body": "endpoint",
                            "(google.api.method_signature)": "endpoint,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{endpoint.name=projects/*/locations/*/endpoints/*}",
                                "body": "endpoint"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,update_mask"
                            }
                          ]
                        },
                        "DeleteEndpoint": {
                          "requestType": "DeleteEndpointRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/endpoints/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/endpoints/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeployModel": {
                          "requestType": "DeployModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:deployModel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,deployed_model,traffic_split",
                            "(google.longrunning.operation_info).response_type": "DeployModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "DeployModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:deployModel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,deployed_model,traffic_split"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "DeployModelResponse",
                                "metadata_type": "DeployModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UndeployModel": {
                          "requestType": "UndeployModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:undeployModel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,deployed_model_id,traffic_split",
                            "(google.longrunning.operation_info).response_type": "UndeployModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "UndeployModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:undeployModel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,deployed_model_id,traffic_split"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UndeployModelResponse",
                                "metadata_type": "UndeployModelOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateEndpointRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "endpoint": {
                          "type": "Endpoint",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateEndpointOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        }
                      }
                    },
                    "ListEndpointsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListEndpointsResponse": {
                      "fields": {
                        "endpoints": {
                          "rule": "repeated",
                          "type": "Endpoint",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateEndpointRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "Endpoint",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteEndpointRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        }
                      }
                    },
                    "DeployModelRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "DeployModelResponse": {
                      "fields": {
                        "deployedModel": {
                          "type": "DeployedModel",
                          "id": 1
                        }
                      }
                    },
                    "DeployModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UndeployModelRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trafficSplit": {
                          "keyType": "string",
                          "type": "int32",
                          "id": 3
                        }
                      }
                    },
                    "UndeployModelResponse": {
                      "fields": {}
                    },
                    "UndeployModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "HyperparameterTuningJob": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/HyperparameterTuningJob",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "studySpec": {
                          "type": "StudySpec",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "maxTrialCount": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parallelTrialCount": {
                          "type": "int32",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "maxFailedTrialCount": {
                          "type": "int32",
                          "id": 7
                        },
                        "trialJobSpec": {
                          "type": "CustomJobSpec",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "JobState",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "error": {
                          "type": "google.rpc.Status",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 16
                        },
                        "encryptionSpec": {
                          "type": "EncryptionSpec",
                          "id": 17
                        }
                      }
                    },
                    "Study": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Study",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/studies/{study}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "studySpec": {
                          "type": "StudySpec",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "inactiveReason": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "ACTIVE": 1,
                            "INACTIVE": 2,
                            "COMPLETED": 3
                          }
                        }
                      }
                    },
                    "Trial": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/Trial",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/studies/{study}/trials/{trial}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "id": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "parameters": {
                          "rule": "repeated",
                          "type": "Parameter",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "finalMeasurement": {
                          "type": "Measurement",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "customJob": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      },
                      "nested": {
                        "Parameter": {
                          "fields": {
                            "parameterId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "google.protobuf.Value",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "REQUESTED": 1,
                            "ACTIVE": 2,
                            "STOPPING": 3,
                            "SUCCEEDED": 4,
                            "INFEASIBLE": 5
                          }
                        }
                      }
                    },
                    "StudySpec": {
                      "oneofs": {
                        "automatedStoppingSpec": {
                          "oneof": [
                            "decayCurveStoppingSpec",
                            "medianAutomatedStoppingSpec",
                            "convexStopConfig"
                          ]
                        }
                      },
                      "fields": {
                        "decayCurveStoppingSpec": {
                          "type": "DecayCurveAutomatedStoppingSpec",
                          "id": 4
                        },
                        "medianAutomatedStoppingSpec": {
                          "type": "MedianAutomatedStoppingSpec",
                          "id": 5
                        },
                        "convexStopConfig": {
                          "type": "ConvexStopConfig",
                          "id": 8
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "MetricSpec",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parameters": {
                          "rule": "repeated",
                          "type": "ParameterSpec",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "algorithm": {
                          "type": "Algorithm",
                          "id": 3
                        },
                        "observationNoise": {
                          "type": "ObservationNoise",
                          "id": 6
                        },
                        "measurementSelectionType": {
                          "type": "MeasurementSelectionType",
                          "id": 7
                        }
                      },
                      "nested": {
                        "MetricSpec": {
                          "fields": {
                            "metricId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "goal": {
                              "type": "GoalType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "GoalType": {
                              "values": {
                                "GOAL_TYPE_UNSPECIFIED": 0,
                                "MAXIMIZE": 1,
                                "MINIMIZE": 2
                              }
                            }
                          }
                        },
                        "ParameterSpec": {
                          "oneofs": {
                            "parameterValueSpec": {
                              "oneof": [
                                "doubleValueSpec",
                                "integerValueSpec",
                                "categoricalValueSpec",
                                "discreteValueSpec"
                              ]
                            }
                          },
                          "fields": {
                            "doubleValueSpec": {
                              "type": "DoubleValueSpec",
                              "id": 2
                            },
                            "integerValueSpec": {
                              "type": "IntegerValueSpec",
                              "id": 3
                            },
                            "categoricalValueSpec": {
                              "type": "CategoricalValueSpec",
                              "id": 4
                            },
                            "discreteValueSpec": {
                              "type": "DiscreteValueSpec",
                              "id": 5
                            },
                            "parameterId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "scaleType": {
                              "type": "ScaleType",
                              "id": 6
                            },
                            "conditionalParameterSpecs": {
                              "rule": "repeated",
                              "type": "ConditionalParameterSpec",
                              "id": 10
                            }
                          },
                          "nested": {
                            "DoubleValueSpec": {
                              "fields": {
                                "minValue": {
                                  "type": "double",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxValue": {
                                  "type": "double",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "IntegerValueSpec": {
                              "fields": {
                                "minValue": {
                                  "type": "int64",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "maxValue": {
                                  "type": "int64",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "CategoricalValueSpec": {
                              "fields": {
                                "values": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "DiscreteValueSpec": {
                              "fields": {
                                "values": {
                                  "rule": "repeated",
                                  "type": "double",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "ConditionalParameterSpec": {
                              "oneofs": {
                                "parentValueCondition": {
                                  "oneof": [
                                    "parentDiscreteValues",
                                    "parentIntValues",
                                    "parentCategoricalValues"
                                  ]
                                }
                              },
                              "fields": {
                                "parentDiscreteValues": {
                                  "type": "DiscreteValueCondition",
                                  "id": 2
                                },
                                "parentIntValues": {
                                  "type": "IntValueCondition",
                                  "id": 3
                                },
                                "parentCategoricalValues": {
                                  "type": "CategoricalValueCondition",
                                  "id": 4
                                },
                                "parameterSpec": {
                                  "type": "ParameterSpec",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              },
                              "nested": {
                                "DiscreteValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "double",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                },
                                "IntValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                },
                                "CategoricalValueCondition": {
                                  "fields": {
                                    "values": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "ScaleType": {
                              "values": {
                                "SCALE_TYPE_UNSPECIFIED": 0,
                                "UNIT_LINEAR_SCALE": 1,
                                "UNIT_LOG_SCALE": 2,
                                "UNIT_REVERSE_LOG_SCALE": 3
                              }
                            }
                          }
                        },
                        "DecayCurveAutomatedStoppingSpec": {
                          "fields": {
                            "useElapsedDuration": {
                              "type": "bool",
                              "id": 1
                            }
                          }
                        },
                        "MedianAutomatedStoppingSpec": {
                          "fields": {
                            "useElapsedDuration": {
                              "type": "bool",
                              "id": 1
                            }
                          }
                        },
                        "ConvexStopConfig": {
                          "fields": {
                            "maxNumSteps": {
                              "type": "int64",
                              "id": 1
                            },
                            "minNumSteps": {
                              "type": "int64",
                              "id": 2
                            },
                            "autoregressiveOrder": {
                              "type": "int64",
                              "id": 3
                            },
                            "learningRateParameterName": {
                              "type": "string",
                              "id": 4
                            },
                            "useSeconds": {
                              "type": "bool",
                              "id": 5
                            }
                          }
                        },
                        "Algorithm": {
                          "values": {
                            "ALGORITHM_UNSPECIFIED": 0,
                            "GRID_SEARCH": 2,
                            "RANDOM_SEARCH": 3
                          }
                        },
                        "ObservationNoise": {
                          "values": {
                            "OBSERVATION_NOISE_UNSPECIFIED": 0,
                            "LOW": 1,
                            "HIGH": 2
                          }
                        },
                        "MeasurementSelectionType": {
                          "values": {
                            "MEASUREMENT_SELECTION_TYPE_UNSPECIFIED": 0,
                            "LAST_MEASUREMENT": 1,
                            "BEST_MEASUREMENT": 2
                          }
                        }
                      }
                    },
                    "Measurement": {
                      "fields": {
                        "stepCount": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metrics": {
                          "rule": "repeated",
                          "type": "Metric",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Metric": {
                          "fields": {
                            "metricId": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "double",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "JobService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateCustomJob": {
                          "requestType": "CreateCustomJobRequest",
                          "responseType": "CustomJob",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/customJobs",
                            "(google.api.http).body": "custom_job",
                            "(google.api.method_signature)": "parent,custom_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/customJobs",
                                "body": "custom_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,custom_job"
                            }
                          ]
                        },
                        "GetCustomJob": {
                          "requestType": "GetCustomJobRequest",
                          "responseType": "CustomJob",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/customJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/customJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListCustomJobs": {
                          "requestType": "ListCustomJobsRequest",
                          "responseType": "ListCustomJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/customJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/customJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteCustomJob": {
                          "requestType": "DeleteCustomJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/customJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/customJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelCustomJob": {
                          "requestType": "CancelCustomJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/customJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/customJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateDataLabelingJob": {
                          "requestType": "CreateDataLabelingJobRequest",
                          "responseType": "DataLabelingJob",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/dataLabelingJobs",
                            "(google.api.http).body": "data_labeling_job",
                            "(google.api.method_signature)": "parent,data_labeling_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/dataLabelingJobs",
                                "body": "data_labeling_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,data_labeling_job"
                            }
                          ]
                        },
                        "GetDataLabelingJob": {
                          "requestType": "GetDataLabelingJobRequest",
                          "responseType": "DataLabelingJob",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListDataLabelingJobs": {
                          "requestType": "ListDataLabelingJobsRequest",
                          "responseType": "ListDataLabelingJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/dataLabelingJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/dataLabelingJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteDataLabelingJob": {
                          "requestType": "DeleteDataLabelingJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelDataLabelingJob": {
                          "requestType": "CancelDataLabelingJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateHyperparameterTuningJob": {
                          "requestType": "CreateHyperparameterTuningJobRequest",
                          "responseType": "HyperparameterTuningJob",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                            "(google.api.http).body": "hyperparameter_tuning_job",
                            "(google.api.method_signature)": "parent,hyperparameter_tuning_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                                "body": "hyperparameter_tuning_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,hyperparameter_tuning_job"
                            }
                          ]
                        },
                        "GetHyperparameterTuningJob": {
                          "requestType": "GetHyperparameterTuningJobRequest",
                          "responseType": "HyperparameterTuningJob",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListHyperparameterTuningJobs": {
                          "requestType": "ListHyperparameterTuningJobsRequest",
                          "responseType": "ListHyperparameterTuningJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/hyperparameterTuningJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/hyperparameterTuningJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteHyperparameterTuningJob": {
                          "requestType": "DeleteHyperparameterTuningJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelHyperparameterTuningJob": {
                          "requestType": "CancelHyperparameterTuningJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateBatchPredictionJob": {
                          "requestType": "CreateBatchPredictionJobRequest",
                          "responseType": "BatchPredictionJob",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/batchPredictionJobs",
                            "(google.api.http).body": "batch_prediction_job",
                            "(google.api.method_signature)": "parent,batch_prediction_job"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/batchPredictionJobs",
                                "body": "batch_prediction_job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,batch_prediction_job"
                            }
                          ]
                        },
                        "GetBatchPredictionJob": {
                          "requestType": "GetBatchPredictionJobRequest",
                          "responseType": "BatchPredictionJob",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListBatchPredictionJobs": {
                          "requestType": "ListBatchPredictionJobsRequest",
                          "responseType": "ListBatchPredictionJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/batchPredictionJobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/batchPredictionJobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteBatchPredictionJob": {
                          "requestType": "DeleteBatchPredictionJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelBatchPredictionJob": {
                          "requestType": "CancelBatchPredictionJobRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/batchPredictionJobs/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        }
                      }
                    },
                    "CreateCustomJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "customJob": {
                          "type": "CustomJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "ListCustomJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListCustomJobsResponse": {
                      "fields": {
                        "customJobs": {
                          "rule": "repeated",
                          "type": "CustomJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "CancelCustomJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/CustomJob"
                          }
                        }
                      }
                    },
                    "CreateDataLabelingJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "dataLabelingJob": {
                          "type": "DataLabelingJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "ListDataLabelingJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "ListDataLabelingJobsResponse": {
                      "fields": {
                        "dataLabelingJobs": {
                          "rule": "repeated",
                          "type": "DataLabelingJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "CancelDataLabelingJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/DataLabelingJob"
                          }
                        }
                      }
                    },
                    "CreateHyperparameterTuningJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "hyperparameterTuningJob": {
                          "type": "HyperparameterTuningJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "ListHyperparameterTuningJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListHyperparameterTuningJobsResponse": {
                      "fields": {
                        "hyperparameterTuningJobs": {
                          "rule": "repeated",
                          "type": "HyperparameterTuningJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "CancelHyperparameterTuningJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/HyperparameterTuningJob"
                          }
                        }
                      }
                    },
                    "CreateBatchPredictionJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "batchPredictionJob": {
                          "type": "BatchPredictionJob",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "ListBatchPredictionJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListBatchPredictionJobsResponse": {
                      "fields": {
                        "batchPredictionJobs": {
                          "rule": "repeated",
                          "type": "BatchPredictionJob",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "CancelBatchPredictionJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/BatchPredictionJob"
                          }
                        }
                      }
                    },
                    "MigratableResource": {
                      "oneofs": {
                        "resource": {
                          "oneof": [
                            "mlEngineModelVersion",
                            "automlModel",
                            "automlDataset",
                            "dataLabelingDataset"
                          ]
                        }
                      },
                      "fields": {
                        "mlEngineModelVersion": {
                          "type": "MlEngineModelVersion",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "automlModel": {
                          "type": "AutomlModel",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "automlDataset": {
                          "type": "AutomlDataset",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "dataLabelingDataset": {
                          "type": "DataLabelingDataset",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastMigrateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "lastUpdateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "MlEngineModelVersion": {
                          "fields": {
                            "endpoint": {
                              "type": "string",
                              "id": 1
                            },
                            "version": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "ml.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "AutomlModel": {
                          "fields": {
                            "model": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "automl.googleapis.com/Model"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "AutomlDataset": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "automl.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "DataLabelingDataset": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "datalabeling.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 4
                            },
                            "dataLabelingAnnotatedDatasets": {
                              "rule": "repeated",
                              "type": "DataLabelingAnnotatedDataset",
                              "id": 3
                            }
                          },
                          "nested": {
                            "DataLabelingAnnotatedDataset": {
                              "fields": {
                                "annotatedDataset": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "datalabeling.googleapis.com/AnnotatedDataset"
                                  }
                                },
                                "annotatedDatasetDisplayName": {
                                  "type": "string",
                                  "id": 3
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "MigrationService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "SearchMigratableResources": {
                          "requestType": "SearchMigratableResourcesRequest",
                          "responseType": "SearchMigratableResourcesResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/migratableResources:search",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/migratableResources:search",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "BatchMigrateResources": {
                          "requestType": "BatchMigrateResourcesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/migratableResources:batchMigrate",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,migrate_resource_requests",
                            "(google.longrunning.operation_info).response_type": "BatchMigrateResourcesResponse",
                            "(google.longrunning.operation_info).metadata_type": "BatchMigrateResourcesOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/migratableResources:batchMigrate",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,migrate_resource_requests"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "BatchMigrateResourcesResponse",
                                "metadata_type": "BatchMigrateResourcesOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "SearchMigratableResourcesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "SearchMigratableResourcesResponse": {
                      "fields": {
                        "migratableResources": {
                          "rule": "repeated",
                          "type": "MigratableResource",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "BatchMigrateResourcesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "migrateResourceRequests": {
                          "rule": "repeated",
                          "type": "MigrateResourceRequest",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "MigrateResourceRequest": {
                      "oneofs": {
                        "request": {
                          "oneof": [
                            "migrateMlEngineModelVersionConfig",
                            "migrateAutomlModelConfig",
                            "migrateAutomlDatasetConfig",
                            "migrateDataLabelingDatasetConfig"
                          ]
                        }
                      },
                      "fields": {
                        "migrateMlEngineModelVersionConfig": {
                          "type": "MigrateMlEngineModelVersionConfig",
                          "id": 1
                        },
                        "migrateAutomlModelConfig": {
                          "type": "MigrateAutomlModelConfig",
                          "id": 2
                        },
                        "migrateAutomlDatasetConfig": {
                          "type": "MigrateAutomlDatasetConfig",
                          "id": 3
                        },
                        "migrateDataLabelingDatasetConfig": {
                          "type": "MigrateDataLabelingDatasetConfig",
                          "id": 4
                        }
                      },
                      "nested": {
                        "MigrateMlEngineModelVersionConfig": {
                          "fields": {
                            "endpoint": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "modelVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "ml.googleapis.com/Version"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "MigrateAutomlModelConfig": {
                          "fields": {
                            "model": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "automl.googleapis.com/Model"
                              }
                            },
                            "modelDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "MigrateAutomlDatasetConfig": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "automl.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "MigrateDataLabelingDatasetConfig": {
                          "fields": {
                            "dataset": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "datalabeling.googleapis.com/Dataset"
                              }
                            },
                            "datasetDisplayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "migrateDataLabelingAnnotatedDatasetConfigs": {
                              "rule": "repeated",
                              "type": "MigrateDataLabelingAnnotatedDatasetConfig",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "MigrateDataLabelingAnnotatedDatasetConfig": {
                              "fields": {
                                "annotatedDataset": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "datalabeling.googleapis.com/AnnotatedDataset"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "BatchMigrateResourcesResponse": {
                      "fields": {
                        "migrateResourceResponses": {
                          "rule": "repeated",
                          "type": "MigrateResourceResponse",
                          "id": 1
                        }
                      }
                    },
                    "MigrateResourceResponse": {
                      "oneofs": {
                        "migratedResource": {
                          "oneof": [
                            "dataset",
                            "model"
                          ]
                        }
                      },
                      "fields": {
                        "dataset": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                          }
                        },
                        "model": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "migratableResource": {
                          "type": "MigratableResource",
                          "id": 3
                        }
                      }
                    },
                    "BatchMigrateResourcesOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "partialResults": {
                          "rule": "repeated",
                          "type": "PartialResult",
                          "id": 2
                        }
                      },
                      "nested": {
                        "PartialResult": {
                          "oneofs": {
                            "result": {
                              "oneof": [
                                "error",
                                "model",
                                "dataset"
                              ]
                            }
                          },
                          "fields": {
                            "error": {
                              "type": "google.rpc.Status",
                              "id": 2
                            },
                            "model": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                              }
                            },
                            "dataset": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.resource_reference).type": "aiplatform.googleapis.com/Dataset"
                              }
                            },
                            "request": {
                              "type": "MigrateResourceRequest",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "ModelEvaluation": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/ModelEvaluation",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metricsSchemaUri": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metrics": {
                          "type": "google.protobuf.Value",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "sliceDimensions": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "modelExplanation": {
                          "type": "ModelExplanation",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "explanationSpecs": {
                          "rule": "repeated",
                          "type": "ModelEvaluationExplanationSpec",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "ModelEvaluationExplanationSpec": {
                          "fields": {
                            "explanationType": {
                              "type": "string",
                              "id": 1
                            },
                            "explanationSpec": {
                              "type": "ExplanationSpec",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "ModelEvaluationSlice": {
                      "options": {
                        "(google.api.resource).type": "aiplatform.googleapis.com/ModelEvaluationSlice",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "slice": {
                          "type": "Slice",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metricsSchemaUri": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "metrics": {
                          "type": "google.protobuf.Value",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "Slice": {
                          "fields": {
                            "dimension": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "value": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "ModelService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "UploadModel": {
                          "requestType": "UploadModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/models:upload",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,model",
                            "(google.longrunning.operation_info).response_type": "UploadModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "UploadModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/models:upload",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,model"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "UploadModelResponse",
                                "metadata_type": "UploadModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetModel": {
                          "requestType": "GetModelRequest",
                          "responseType": "Model",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/models/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/models/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModels": {
                          "requestType": "ListModelsRequest",
                          "responseType": "ListModelsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/models",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/models"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateModel": {
                          "requestType": "UpdateModelRequest",
                          "responseType": "Model",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{model.name=projects/*/locations/*/models/*}",
                            "(google.api.http).body": "model",
                            "(google.api.method_signature)": "model,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{model.name=projects/*/locations/*/models/*}",
                                "body": "model"
                              }
                            },
                            {
                              "(google.api.method_signature)": "model,update_mask"
                            }
                          ]
                        },
                        "DeleteModel": {
                          "requestType": "DeleteModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/models/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/models/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "ExportModel": {
                          "requestType": "ExportModelRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/models/*}:export",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,output_config",
                            "(google.longrunning.operation_info).response_type": "ExportModelResponse",
                            "(google.longrunning.operation_info).metadata_type": "ExportModelOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/models/*}:export",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,output_config"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ExportModelResponse",
                                "metadata_type": "ExportModelOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetModelEvaluation": {
                          "requestType": "GetModelEvaluationRequest",
                          "responseType": "ModelEvaluation",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModelEvaluations": {
                          "requestType": "ListModelEvaluationsRequest",
                          "responseType": "ListModelEvaluationsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/models/*}/evaluations",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/models/*}/evaluations"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetModelEvaluationSlice": {
                          "requestType": "GetModelEvaluationSliceRequest",
                          "responseType": "ModelEvaluationSlice",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/slices/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/slices/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListModelEvaluationSlices": {
                          "requestType": "ListModelEvaluationSlicesRequest",
                          "responseType": "ListModelEvaluationSlicesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/models/*/evaluations/*}/slices"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "UploadModelRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "model": {
                          "type": "Model",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UploadModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "UploadModelResponse": {
                      "fields": {
                        "model": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "GetModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "ListModelsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelsResponse": {
                      "fields": {
                        "models": {
                          "rule": "repeated",
                          "type": "Model",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "UpdateModelRequest": {
                      "fields": {
                        "model": {
                          "type": "Model",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        }
                      }
                    },
                    "ExportModelRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "outputConfig": {
                          "type": "OutputConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "OutputConfig": {
                          "fields": {
                            "exportFormatId": {
                              "type": "string",
                              "id": 1
                            },
                            "artifactDestination": {
                              "type": "GcsDestination",
                              "id": 3
                            },
                            "imageDestination": {
                              "type": "ContainerRegistryDestination",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "ExportModelOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "outputInfo": {
                          "type": "OutputInfo",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "OutputInfo": {
                          "fields": {
                            "artifactOutputUri": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "imageOutputUri": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        }
                      }
                    },
                    "ExportModelResponse": {
                      "fields": {}
                    },
                    "GetModelEvaluationRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluation"
                          }
                        }
                      }
                    },
                    "ListModelEvaluationsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Model"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelEvaluationsResponse": {
                      "fields": {
                        "modelEvaluations": {
                          "rule": "repeated",
                          "type": "ModelEvaluation",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetModelEvaluationSliceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluationSlice"
                          }
                        }
                      }
                    },
                    "ListModelEvaluationSlicesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/ModelEvaluation"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListModelEvaluationSlicesResponse": {
                      "fields": {
                        "modelEvaluationSlices": {
                          "rule": "repeated",
                          "type": "ModelEvaluationSlice",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "PipelineService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateTrainingPipeline": {
                          "requestType": "CreateTrainingPipelineRequest",
                          "responseType": "TrainingPipeline",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/trainingPipelines",
                            "(google.api.http).body": "training_pipeline",
                            "(google.api.method_signature)": "parent,training_pipeline"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/trainingPipelines",
                                "body": "training_pipeline"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,training_pipeline"
                            }
                          ]
                        },
                        "GetTrainingPipeline": {
                          "requestType": "GetTrainingPipelineRequest",
                          "responseType": "TrainingPipeline",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTrainingPipelines": {
                          "requestType": "ListTrainingPipelinesRequest",
                          "responseType": "ListTrainingPipelinesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/trainingPipelines",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/trainingPipelines"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteTrainingPipeline": {
                          "requestType": "DeleteTrainingPipelineRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "CancelTrainingPipeline": {
                          "requestType": "CancelTrainingPipelineRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}:cancel",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}:cancel",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        }
                      }
                    },
                    "CreateTrainingPipelineRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "trainingPipeline": {
                          "type": "TrainingPipeline",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "ListTrainingPipelinesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 5
                        }
                      }
                    },
                    "ListTrainingPipelinesResponse": {
                      "fields": {
                        "trainingPipelines": {
                          "rule": "repeated",
                          "type": "TrainingPipeline",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "CancelTrainingPipelineRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/TrainingPipeline"
                          }
                        }
                      }
                    },
                    "PredictionService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "Predict": {
                          "requestType": "PredictRequest",
                          "responseType": "PredictResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:predict",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,instances,parameters"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:predict",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,instances,parameters"
                            }
                          ]
                        },
                        "Explain": {
                          "requestType": "ExplainRequest",
                          "responseType": "ExplainResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:explain",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "endpoint,instances,parameters,deployed_model_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{endpoint=projects/*/locations/*/endpoints/*}:explain",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint,instances,parameters,deployed_model_id"
                            }
                          ]
                        }
                      }
                    },
                    "PredictRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parameters": {
                          "type": "google.protobuf.Value",
                          "id": 3
                        }
                      }
                    },
                    "PredictResponse": {
                      "fields": {
                        "predictions": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 1
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ExplainRequest": {
                      "fields": {
                        "endpoint": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Endpoint"
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "parameters": {
                          "type": "google.protobuf.Value",
                          "id": 4
                        },
                        "explanationSpecOverride": {
                          "type": "ExplanationSpecOverride",
                          "id": 5
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ExplainResponse": {
                      "fields": {
                        "explanations": {
                          "rule": "repeated",
                          "type": "Explanation",
                          "id": 1
                        },
                        "deployedModelId": {
                          "type": "string",
                          "id": 2
                        },
                        "predictions": {
                          "rule": "repeated",
                          "type": "google.protobuf.Value",
                          "id": 3
                        }
                      }
                    },
                    "schema": {
                      "options": {
                        "go_package": "google.golang.org/genproto/googleapis/cloud/aiplatform/v1beta1/schema;schema",
                        "java_multiple_files": true,
                        "java_outer_classname": "DatasetMetadataProto",
                        "java_package": "com.google.cloud.aiplatform.v1beta1.schema"
                      },
                      "nested": {
                        "ImageClassificationAnnotation": {
                          "fields": {
                            "annotationSpecId": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "ImageBoundingBoxAnnotation": {
                          "fields": {
                            "annotationSpecId": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            },
                            "xMin": {
                              "type": "double",
                              "id": 3
                            },
                            "xMax": {
                              "type": "double",
                              "id": 4
                            },
                            "yMin": {
                              "type": "double",
                              "id": 5
                            },
                            "yMax": {
                              "type": "double",
                              "id": 6
                            }
                          }
                        },
                        "ImageSegmentationAnnotation": {
                          "oneofs": {
                            "annotation": {
                              "oneof": [
                                "maskAnnotation",
                                "polygonAnnotation",
                                "polylineAnnotation"
                              ]
                            }
                          },
                          "fields": {
                            "maskAnnotation": {
                              "type": "MaskAnnotation",
                              "id": 3
                            },
                            "polygonAnnotation": {
                              "type": "PolygonAnnotation",
                              "id": 4
                            },
                            "polylineAnnotation": {
                              "type": "PolylineAnnotation",
                              "id": 5
                            }
                          },
                          "nested": {
                            "MaskAnnotation": {
                              "fields": {
                                "maskGcsUri": {
                                  "type": "string",
                                  "id": 1
                                },
                                "annotationSpecColors": {
                                  "rule": "repeated",
                                  "type": "AnnotationSpecColor",
                                  "id": 2
                                }
                              }
                            },
                            "PolygonAnnotation": {
                              "fields": {
                                "vertexes": {
                                  "rule": "repeated",
                                  "type": "Vertex",
                                  "id": 1
                                },
                                "annotationSpecId": {
                                  "type": "string",
                                  "id": 2
                                },
                                "displayName": {
                                  "type": "string",
                                  "id": 3
                                }
                              }
                            },
                            "PolylineAnnotation": {
                              "fields": {
                                "vertexes": {
                                  "rule": "repeated",
                                  "type": "Vertex",
                                  "id": 1
                                },
                                "annotationSpecId": {
                                  "type": "string",
                                  "id": 2
                                },
                                "displayName": {
                                  "type": "string",
                                  "id": 3
                                }
                              }
                            }
                          }
                        },
                        "TextClassificationAnnotation": {
                          "fields": {
                            "annotationSpecId": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "TextExtractionAnnotation": {
                          "fields": {
                            "textSegment": {
                              "type": "TextSegment",
                              "id": 1
                            },
                            "annotationSpecId": {
                              "type": "string",
                              "id": 2
                            },
                            "displayName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "TextSegment": {
                          "fields": {
                            "startOffset": {
                              "type": "uint64",
                              "id": 1
                            },
                            "endOffset": {
                              "type": "uint64",
                              "id": 2
                            },
                            "content": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "TextSentimentAnnotation": {
                          "fields": {
                            "sentiment": {
                              "type": "int32",
                              "id": 1
                            },
                            "sentimentMax": {
                              "type": "int32",
                              "id": 2
                            },
                            "annotationSpecId": {
                              "type": "string",
                              "id": 3
                            },
                            "displayName": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "VideoClassificationAnnotation": {
                          "fields": {
                            "timeSegment": {
                              "type": "TimeSegment",
                              "id": 1
                            },
                            "annotationSpecId": {
                              "type": "string",
                              "id": 2
                            },
                            "displayName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "TimeSegment": {
                          "fields": {
                            "startTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 1
                            },
                            "endTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 2
                            }
                          }
                        },
                        "VideoObjectTrackingAnnotation": {
                          "fields": {
                            "timeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 1
                            },
                            "xMin": {
                              "type": "double",
                              "id": 2
                            },
                            "xMax": {
                              "type": "double",
                              "id": 3
                            },
                            "yMin": {
                              "type": "double",
                              "id": 4
                            },
                            "yMax": {
                              "type": "double",
                              "id": 5
                            },
                            "instanceId": {
                              "type": "int64",
                              "id": 6
                            },
                            "annotationSpecId": {
                              "type": "string",
                              "id": 7
                            },
                            "displayName": {
                              "type": "string",
                              "id": 8
                            }
                          }
                        },
                        "VideoActionRecognitionAnnotation": {
                          "fields": {
                            "timeSegment": {
                              "type": "TimeSegment",
                              "id": 1
                            },
                            "annotationSpecId": {
                              "type": "string",
                              "id": 2
                            },
                            "displayName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "AnnotationSpecColor": {
                          "fields": {
                            "color": {
                              "type": "google.type.Color",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            },
                            "id": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "Vertex": {
                          "fields": {
                            "x": {
                              "type": "double",
                              "id": 1
                            },
                            "y": {
                              "type": "double",
                              "id": 2
                            }
                          }
                        },
                        "ImageDataItem": {
                          "fields": {
                            "gcsUri": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "mimeType": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "VideoDataItem": {
                          "fields": {
                            "gcsUri": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "mimeType": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "TextDataItem": {
                          "fields": {
                            "gcsUri": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          }
                        },
                        "ImageDatasetMetadata": {
                          "fields": {
                            "dataItemSchemaUri": {
                              "type": "string",
                              "id": 1
                            },
                            "gcsBucket": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "TextDatasetMetadata": {
                          "fields": {
                            "dataItemSchemaUri": {
                              "type": "string",
                              "id": 1
                            },
                            "gcsBucket": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "VideoDatasetMetadata": {
                          "fields": {
                            "dataItemSchemaUri": {
                              "type": "string",
                              "id": 1
                            },
                            "gcsBucket": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "TablesDatasetMetadata": {
                          "fields": {
                            "inputConfig": {
                              "type": "InputConfig",
                              "id": 1
                            }
                          },
                          "nested": {
                            "InputConfig": {
                              "oneofs": {
                                "source": {
                                  "oneof": [
                                    "gcsSource",
                                    "bigquerySource"
                                  ]
                                }
                              },
                              "fields": {
                                "gcsSource": {
                                  "type": "GcsSource",
                                  "id": 1
                                },
                                "bigquerySource": {
                                  "type": "BigQuerySource",
                                  "id": 2
                                }
                              }
                            },
                            "GcsSource": {
                              "fields": {
                                "uri": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            },
                            "BigQuerySource": {
                              "fields": {
                                "uri": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "TimeSeriesDatasetMetadata": {
                          "fields": {
                            "inputConfig": {
                              "type": "InputConfig",
                              "id": 1
                            },
                            "timeSeriesIdentifierColumn": {
                              "type": "string",
                              "id": 2
                            },
                            "timeColumn": {
                              "type": "string",
                              "id": 3
                            }
                          },
                          "nested": {
                            "InputConfig": {
                              "oneofs": {
                                "source": {
                                  "oneof": [
                                    "gcsSource",
                                    "bigquerySource"
                                  ]
                                }
                              },
                              "fields": {
                                "gcsSource": {
                                  "type": "GcsSource",
                                  "id": 1
                                },
                                "bigquerySource": {
                                  "type": "BigQuerySource",
                                  "id": 2
                                }
                              }
                            },
                            "GcsSource": {
                              "fields": {
                                "uri": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            },
                            "BigQuerySource": {
                              "fields": {
                                "uri": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "predict": {
                          "nested": {
                            "instance": {
                              "options": {
                                "go_package": "google.golang.org/genproto/googleapis/cloud/aiplatform/v1beta1/schema/predict/instance;instance",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionInstanceProto",
                                "java_package": "com.google.cloud.aiplatform.v1beta1.schema.predict.instance"
                              },
                              "nested": {
                                "ImageClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TextClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TextExtractionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "key": {
                                      "type": "string",
                                      "id": 3
                                    }
                                  }
                                },
                                "TextSentimentPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                },
                                "VideoClassificationPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionInstance": {
                                  "fields": {
                                    "content": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "string",
                                      "id": 4
                                    }
                                  }
                                }
                              }
                            },
                            "params": {
                              "options": {
                                "go_package": "google.golang.org/genproto/googleapis/cloud/aiplatform/v1beta1/schema/predict/params;params",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionParamsProto",
                                "java_package": "com.google.cloud.aiplatform.v1beta1.schema.predict.params"
                              },
                              "nested": {
                                "ImageClassificationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    }
                                  }
                                },
                                "VideoClassificationPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    },
                                    "segmentClassification": {
                                      "type": "bool",
                                      "id": 3
                                    },
                                    "shotClassification": {
                                      "type": "bool",
                                      "id": 4
                                    },
                                    "oneSecIntervalClassification": {
                                      "type": "bool",
                                      "id": 5
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionParams": {
                                  "fields": {
                                    "confidenceThreshold": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "maxPredictions": {
                                      "type": "int32",
                                      "id": 2
                                    },
                                    "minBoundingBoxSize": {
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                }
                              }
                            },
                            "prediction": {
                              "options": {
                                "go_package": "google.golang.org/genproto/googleapis/cloud/aiplatform/v1beta1/schema/predict/prediction;prediction",
                                "java_multiple_files": true,
                                "java_outer_classname": "VideoObjectTrackingPredictionResultProto",
                                "java_package": "com.google.cloud.aiplatform.v1beta1.schema.predict.prediction"
                              },
                              "nested": {
                                "ClassificationPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                },
                                "ImageObjectDetectionPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 3
                                    },
                                    "bboxes": {
                                      "rule": "repeated",
                                      "type": "google.protobuf.ListValue",
                                      "id": 4
                                    }
                                  }
                                },
                                "ImageSegmentationPredictionResult": {
                                  "fields": {
                                    "categoryMask": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "confidenceMask": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                },
                                "TabularClassificationPredictionResult": {
                                  "fields": {
                                    "classes": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 1
                                    },
                                    "scores": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 2
                                    }
                                  }
                                },
                                "TabularRegressionPredictionResult": {
                                  "fields": {
                                    "value": {
                                      "type": "float",
                                      "id": 1
                                    },
                                    "lowerBound": {
                                      "type": "float",
                                      "id": 2
                                    },
                                    "upperBound": {
                                      "type": "float",
                                      "id": 3
                                    }
                                  }
                                },
                                "TextExtractionPredictionResult": {
                                  "fields": {
                                    "ids": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "displayNames": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 2
                                    },
                                    "textSegmentStartOffsets": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 3
                                    },
                                    "textSegmentEndOffsets": {
                                      "rule": "repeated",
                                      "type": "int64",
                                      "id": 4
                                    },
                                    "confidences": {
                                      "rule": "repeated",
                                      "type": "float",
                                      "id": 5
                                    }
                                  }
                                },
                                "TextSentimentPredictionResult": {
                                  "fields": {
                                    "sentiment": {
                                      "type": "int32",
                                      "id": 1
                                    }
                                  }
                                },
                                "VideoActionRecognitionPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 5
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 6
                                    }
                                  }
                                },
                                "VideoClassificationPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "type": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 5
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 6
                                    }
                                  }
                                },
                                "VideoObjectTrackingPredictionResult": {
                                  "fields": {
                                    "id": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "timeSegmentStart": {
                                      "type": "google.protobuf.Duration",
                                      "id": 3
                                    },
                                    "timeSegmentEnd": {
                                      "type": "google.protobuf.Duration",
                                      "id": 4
                                    },
                                    "confidence": {
                                      "type": "google.protobuf.FloatValue",
                                      "id": 5
                                    },
                                    "frames": {
                                      "rule": "repeated",
                                      "type": "Frame",
                                      "id": 6
                                    }
                                  },
                                  "nested": {
                                    "Frame": {
                                      "fields": {
                                        "timeOffset": {
                                          "type": "google.protobuf.Duration",
                                          "id": 1
                                        },
                                        "xMin": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 2
                                        },
                                        "xMax": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 3
                                        },
                                        "yMin": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 4
                                        },
                                        "yMax": {
                                          "type": "google.protobuf.FloatValue",
                                          "id": 5
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trainingjob": {
                          "nested": {
                            "definition": {
                              "options": {
                                "go_package": "google.golang.org/genproto/googleapis/cloud/aiplatform/v1beta1/schema/trainingjob/definition;definition",
                                "java_multiple_files": true,
                                "java_outer_classname": "AutoMLVideoObjectTrackingProto",
                                "java_package": "com.google.cloud.aiplatform.v1beta1.schema.trainingjob.definition"
                              },
                              "nested": {
                                "AutoMlImageClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageClassificationInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageClassificationMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageClassificationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "baseModelId": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 3
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 4
                                    },
                                    "multiLabel": {
                                      "type": "bool",
                                      "id": 5
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_TF_LOW_LATENCY_1": 2,
                                        "MOBILE_TF_VERSATILE_1": 3,
                                        "MOBILE_TF_HIGH_ACCURACY_1": 4
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageClassificationMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetection": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageObjectDetectionInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageObjectDetectionMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetectionInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 2
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 3
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD_HIGH_ACCURACY_1": 1,
                                        "CLOUD_LOW_LATENCY_1": 2,
                                        "MOBILE_TF_LOW_LATENCY_1": 3,
                                        "MOBILE_TF_VERSATILE_1": 4,
                                        "MOBILE_TF_HIGH_ACCURACY_1": 5
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageObjectDetectionMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageSegmentation": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlImageSegmentationInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlImageSegmentationMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlImageSegmentationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    },
                                    "budgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 2
                                    },
                                    "baseModelId": {
                                      "type": "string",
                                      "id": 3
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD_HIGH_ACCURACY_1": 1,
                                        "CLOUD_LOW_ACCURACY_1": 2,
                                        "MOBILE_TF_LOW_LATENCY_1": 3
                                      }
                                    }
                                  }
                                },
                                "AutoMlImageSegmentationMetadata": {
                                  "fields": {
                                    "costMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    },
                                    "successfulStopReason": {
                                      "type": "SuccessfulStopReason",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "SuccessfulStopReason": {
                                      "values": {
                                        "SUCCESSFUL_STOP_REASON_UNSPECIFIED": 0,
                                        "BUDGET_REACHED": 1,
                                        "MODEL_CONVERGED": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlTables": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTablesInputs",
                                      "id": 1
                                    },
                                    "metadata": {
                                      "type": "AutoMlTablesMetadata",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlTablesInputs": {
                                  "oneofs": {
                                    "additionalOptimizationObjectiveConfig": {
                                      "oneof": [
                                        "optimizationObjectiveRecallValue",
                                        "optimizationObjectivePrecisionValue"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "optimizationObjectiveRecallValue": {
                                      "type": "float",
                                      "id": 5
                                    },
                                    "optimizationObjectivePrecisionValue": {
                                      "type": "float",
                                      "id": 6
                                    },
                                    "predictionType": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "targetColumn": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "transformations": {
                                      "rule": "repeated",
                                      "type": "Transformation",
                                      "id": 3
                                    },
                                    "optimizationObjective": {
                                      "type": "string",
                                      "id": 4
                                    },
                                    "trainBudgetMilliNodeHours": {
                                      "type": "int64",
                                      "id": 7
                                    },
                                    "disableEarlyStopping": {
                                      "type": "bool",
                                      "id": 8
                                    },
                                    "weightColumnName": {
                                      "type": "string",
                                      "id": 9
                                    },
                                    "exportEvaluatedDataItemsConfig": {
                                      "type": "ExportEvaluatedDataItemsConfig",
                                      "id": 10
                                    }
                                  },
                                  "nested": {
                                    "Transformation": {
                                      "oneofs": {
                                        "transformationDetail": {
                                          "oneof": [
                                            "auto",
                                            "numeric",
                                            "categorical",
                                            "timestamp",
                                            "text",
                                            "repeatedNumeric",
                                            "repeatedCategorical",
                                            "repeatedText"
                                          ]
                                        }
                                      },
                                      "fields": {
                                        "auto": {
                                          "type": "AutoTransformation",
                                          "id": 1
                                        },
                                        "numeric": {
                                          "type": "NumericTransformation",
                                          "id": 2
                                        },
                                        "categorical": {
                                          "type": "CategoricalTransformation",
                                          "id": 3
                                        },
                                        "timestamp": {
                                          "type": "TimestampTransformation",
                                          "id": 4
                                        },
                                        "text": {
                                          "type": "TextTransformation",
                                          "id": 5
                                        },
                                        "repeatedNumeric": {
                                          "type": "NumericArrayTransformation",
                                          "id": 6
                                        },
                                        "repeatedCategorical": {
                                          "type": "CategoricalArrayTransformation",
                                          "id": 7
                                        },
                                        "repeatedText": {
                                          "type": "TextArrayTransformation",
                                          "id": 8
                                        }
                                      },
                                      "nested": {
                                        "AutoTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "NumericTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 2
                                            }
                                          }
                                        },
                                        "CategoricalTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "TimestampTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "timeFormat": {
                                              "type": "string",
                                              "id": 2
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 3
                                            }
                                          }
                                        },
                                        "TextTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "NumericArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            },
                                            "invalidValuesAllowed": {
                                              "type": "bool",
                                              "id": 2
                                            }
                                          }
                                        },
                                        "CategoricalArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        },
                                        "TextArrayTransformation": {
                                          "fields": {
                                            "columnName": {
                                              "type": "string",
                                              "id": 1
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "AutoMlTablesMetadata": {
                                  "fields": {
                                    "trainCostMilliNodeHours": {
                                      "type": "int64",
                                      "id": 1
                                    }
                                  }
                                },
                                "ExportEvaluatedDataItemsConfig": {
                                  "fields": {
                                    "destinationBigqueryUri": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "overrideExistingTable": {
                                      "type": "bool",
                                      "id": 2
                                    }
                                  }
                                },
                                "AutoMlTextClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextClassificationInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextClassificationInputs": {
                                  "fields": {
                                    "multiLabel": {
                                      "type": "bool",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextExtraction": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextExtractionInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextExtractionInputs": {
                                  "fields": {}
                                },
                                "AutoMlTextSentiment": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlTextSentimentInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlTextSentimentInputs": {
                                  "fields": {
                                    "sentimentMax": {
                                      "type": "int32",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoActionRecognition": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoActionRecognitionInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoActionRecognitionInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2
                                      }
                                    }
                                  }
                                },
                                "AutoMlVideoClassification": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoClassificationInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoClassificationInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2,
                                        "MOBILE_JETSON_VERSATILE_1": 3
                                      }
                                    }
                                  }
                                },
                                "AutoMlVideoObjectTracking": {
                                  "fields": {
                                    "inputs": {
                                      "type": "AutoMlVideoObjectTrackingInputs",
                                      "id": 1
                                    }
                                  }
                                },
                                "AutoMlVideoObjectTrackingInputs": {
                                  "fields": {
                                    "modelType": {
                                      "type": "ModelType",
                                      "id": 1
                                    }
                                  },
                                  "nested": {
                                    "ModelType": {
                                      "values": {
                                        "MODEL_TYPE_UNSPECIFIED": 0,
                                        "CLOUD": 1,
                                        "MOBILE_VERSATILE_1": 2,
                                        "MOBILE_CORAL_VERSATILE_1": 3,
                                        "MOBILE_CORAL_LOW_LATENCY_1": 4,
                                        "MOBILE_JETSON_VERSATILE_1": 5,
                                        "MOBILE_JETSON_LOW_LATENCY_1": 6
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "SpecialistPoolService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateSpecialistPool": {
                          "requestType": "CreateSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/specialistPools",
                            "(google.api.http).body": "specialist_pool",
                            "(google.api.method_signature)": "parent,specialist_pool",
                            "(google.longrunning.operation_info).response_type": "SpecialistPool",
                            "(google.longrunning.operation_info).metadata_type": "CreateSpecialistPoolOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/specialistPools",
                                "body": "specialist_pool"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,specialist_pool"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "SpecialistPool",
                                "metadata_type": "CreateSpecialistPoolOperationMetadata"
                              }
                            }
                          ]
                        },
                        "GetSpecialistPool": {
                          "requestType": "GetSpecialistPoolRequest",
                          "responseType": "SpecialistPool",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/specialistPools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListSpecialistPools": {
                          "requestType": "ListSpecialistPoolsRequest",
                          "responseType": "ListSpecialistPoolsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/specialistPools",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/specialistPools"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteSpecialistPool": {
                          "requestType": "DeleteSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "DeleteOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/specialistPools/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "DeleteOperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateSpecialistPool": {
                          "requestType": "UpdateSpecialistPoolRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{specialist_pool.name=projects/*/locations/*/specialistPools/*}",
                            "(google.api.http).body": "specialist_pool",
                            "(google.api.method_signature)": "specialist_pool,update_mask",
                            "(google.longrunning.operation_info).response_type": "SpecialistPool",
                            "(google.longrunning.operation_info).metadata_type": "UpdateSpecialistPoolOperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{specialist_pool.name=projects/*/locations/*/specialistPools/*}",
                                "body": "specialist_pool"
                              }
                            },
                            {
                              "(google.api.method_signature)": "specialist_pool,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "SpecialistPool",
                                "metadata_type": "UpdateSpecialistPoolOperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CreateSpecialistPoolRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "specialistPool": {
                          "type": "SpecialistPool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateSpecialistPoolOperationMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        }
                      }
                    },
                    "GetSpecialistPoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        }
                      }
                    },
                    "ListSpecialistPoolsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 4
                        }
                      }
                    },
                    "ListSpecialistPoolsResponse": {
                      "fields": {
                        "specialistPools": {
                          "rule": "repeated",
                          "type": "SpecialistPool",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteSpecialistPoolRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2
                        }
                      }
                    },
                    "UpdateSpecialistPoolRequest": {
                      "fields": {
                        "specialistPool": {
                          "type": "SpecialistPool",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateSpecialistPoolOperationMetadata": {
                      "fields": {
                        "specialistPool": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/SpecialistPool"
                          }
                        },
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 2
                        }
                      }
                    },
                    "VizierService": {
                      "options": {
                        "(google.api.default_host)": "aiplatform.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateStudy": {
                          "requestType": "CreateStudyRequest",
                          "responseType": "Study",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/studies",
                            "(google.api.http).body": "study",
                            "(google.api.method_signature)": "parent,study"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/studies",
                                "body": "study"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,study"
                            }
                          ]
                        },
                        "GetStudy": {
                          "requestType": "GetStudyRequest",
                          "responseType": "Study",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/studies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/studies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListStudies": {
                          "requestType": "ListStudiesRequest",
                          "responseType": "ListStudiesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/studies",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/studies"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteStudy": {
                          "requestType": "DeleteStudyRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/studies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/studies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "LookupStudy": {
                          "requestType": "LookupStudyRequest",
                          "responseType": "Study",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/studies:lookup",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/studies:lookup",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "SuggestTrials": {
                          "requestType": "SuggestTrialsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials:suggest",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "SuggestTrialsResponse",
                            "(google.longrunning.operation_info).metadata_type": "SuggestTrialsMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials:suggest",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "SuggestTrialsResponse",
                                "metadata_type": "SuggestTrialsMetadata"
                              }
                            }
                          ]
                        },
                        "CreateTrial": {
                          "requestType": "CreateTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials",
                            "(google.api.http).body": "trial",
                            "(google.api.method_signature)": "parent,trial"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials",
                                "body": "trial"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,trial"
                            }
                          ]
                        },
                        "GetTrial": {
                          "requestType": "GetTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTrials": {
                          "requestType": "ListTrialsRequest",
                          "responseType": "ListTrialsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "AddTrialMeasurement": {
                          "requestType": "AddTrialMeasurementRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{trial_name=projects/*/locations/*/studies/*/trials/*}:addTrialMeasurement",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{trial_name=projects/*/locations/*/studies/*/trials/*}:addTrialMeasurement",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "CompleteTrial": {
                          "requestType": "CompleteTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}:complete",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}:complete",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "DeleteTrial": {
                          "requestType": "DeleteTrialRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CheckTrialEarlyStoppingState": {
                          "requestType": "CheckTrialEarlyStoppingStateRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{trial_name=projects/*/locations/*/studies/*/trials/*}:checkTrialEarlyStoppingState",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "CheckTrialEarlyStoppingStateResponse",
                            "(google.longrunning.operation_info).metadata_type": "CheckTrialEarlyStoppingStateMetatdata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{trial_name=projects/*/locations/*/studies/*/trials/*}:checkTrialEarlyStoppingState",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "CheckTrialEarlyStoppingStateResponse",
                                "metadata_type": "CheckTrialEarlyStoppingStateMetatdata"
                              }
                            }
                          ]
                        },
                        "StopTrial": {
                          "requestType": "StopTrialRequest",
                          "responseType": "Trial",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}:stop",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}:stop",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ListOptimalTrials": {
                          "requestType": "ListOptimalTrialsRequest",
                          "responseType": "ListOptimalTrialsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials:listOptimalTrials",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/studies/*}/trials:listOptimalTrials",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "GetStudyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        }
                      }
                    },
                    "CreateStudyRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "study": {
                          "type": "Study",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListStudiesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListStudiesResponse": {
                      "fields": {
                        "studies": {
                          "rule": "repeated",
                          "type": "Study",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteStudyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        }
                      }
                    },
                    "LookupStudyRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "SuggestTrialsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        },
                        "suggestionCount": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "clientId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "SuggestTrialsResponse": {
                      "fields": {
                        "trials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 1
                        },
                        "studyState": {
                          "type": "Study.State",
                          "id": 2
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        }
                      }
                    },
                    "SuggestTrialsMetadata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "clientId": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateTrialRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        },
                        "trial": {
                          "type": "Trial",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "ListTrialsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListTrialsResponse": {
                      "fields": {
                        "trials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "AddTrialMeasurementRequest": {
                      "fields": {
                        "trialName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        },
                        "measurement": {
                          "type": "Measurement",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CompleteTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        },
                        "finalMeasurement": {
                          "type": "Measurement",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "trialInfeasible": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "infeasibleReason": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "CheckTrialEarlyStoppingStateRequest": {
                      "fields": {
                        "trialName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "CheckTrialEarlyStoppingStateResponse": {
                      "fields": {
                        "shouldStop": {
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "CheckTrialEarlyStoppingStateMetatdata": {
                      "fields": {
                        "genericMetadata": {
                          "type": "GenericOperationMetadata",
                          "id": 1
                        },
                        "study": {
                          "type": "string",
                          "id": 2
                        },
                        "trial": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "StopTrialRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Trial"
                          }
                        }
                      }
                    },
                    "ListOptimalTrialsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "aiplatform.googleapis.com/Study"
                          }
                        }
                      }
                    },
                    "ListOptimalTrialsResponse": {
                      "fields": {
                        "optimalTrials": {
                          "rule": "repeated",
                          "type": "Trial",
                          "id": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ClientProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    }
                  }
                }
              }
            },
            "Struct": {
              "fields": {
                "fields": {
                  "keyType": "string",
                  "type": "Value",
                  "id": 1
                }
              }
            },
            "Value": {
              "oneofs": {
                "kind": {
                  "oneof": [
                    "nullValue",
                    "numberValue",
                    "stringValue",
                    "boolValue",
                    "structValue",
                    "listValue"
                  ]
                }
              },
              "fields": {
                "nullValue": {
                  "type": "NullValue",
                  "id": 1
                },
                "numberValue": {
                  "type": "double",
                  "id": 2
                },
                "stringValue": {
                  "type": "string",
                  "id": 3
                },
                "boolValue": {
                  "type": "bool",
                  "id": 4
                },
                "structValue": {
                  "type": "Struct",
                  "id": 5
                },
                "listValue": {
                  "type": "ListValue",
                  "id": 6
                }
              }
            },
            "NullValue": {
              "values": {
                "NULL_VALUE": 0
              }
            },
            "ListValue": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "Value",
                  "id": 1
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DoubleValue": {
              "fields": {
                "value": {
                  "type": "double",
                  "id": 1
                }
              }
            },
            "FloatValue": {
              "fields": {
                "value": {
                  "type": "float",
                  "id": 1
                }
              }
            },
            "Int64Value": {
              "fields": {
                "value": {
                  "type": "int64",
                  "id": 1
                }
              }
            },
            "UInt64Value": {
              "fields": {
                "value": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "Int32Value": {
              "fields": {
                "value": {
                  "type": "int32",
                  "id": 1
                }
              }
            },
            "UInt32Value": {
              "fields": {
                "value": {
                  "type": "uint32",
                  "id": 1
                }
              }
            },
            "BoolValue": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "StringValue": {
              "fields": {
                "value": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "BytesValue": {
              "fields": {
                "value": {
                  "type": "bytes",
                  "id": 1
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/type/color;color",
            "java_multiple_files": true,
            "java_outer_classname": "ColorProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "Money": {
              "fields": {
                "currencyCode": {
                  "type": "string",
                  "id": 1
                },
                "units": {
                  "type": "int64",
                  "id": 2
                },
                "nanos": {
                  "type": "int32",
                  "id": 3
                }
              }
            },
            "Color": {
              "fields": {
                "red": {
                  "type": "float",
                  "id": 1
                },
                "green": {
                  "type": "float",
                  "id": 2
                },
                "blue": {
                  "type": "float",
                  "id": 3
                },
                "alpha": {
                  "type": "google.protobuf.FloatValue",
                  "id": 4
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        }
      }
    }
  }
}